[{"id":"b38a3e39f2656072","type":"tab","label":"[AC] Get Data","disabled":false,"info":"","env":[]},{"id":"1cf601e0cee40630","type":"tab","label":"[AC] Get VPD","disabled":false,"locked":true,"info":"","env":[]},{"id":"f127264d37d392cc","type":"tab","label":"[AC] Automatic Ventilation","disabled":false,"locked":true,"info":"","env":[]},{"id":"6b9ca77e99021ecb","type":"subflow","name":"[DC] Ventilation Control","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"f69b57236b2a90aa"}]}],"out":[],"env":[],"meta":{"module":"Ventilation Control","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"8e26e62af8447a92","type":"subflow","name":"[AC] VPD Calculation","info":"","category":"","in":[{"x":80,"y":120,"wires":[{"id":"c4572dd0ecfc34eb"}]}],"out":[{"x":400,"y":120,"wires":[{"id":"c4572dd0ecfc34eb","port":0}]}],"env":[],"meta":{"module":"VPD Calculation","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"54acf8fbb7d3b1d7","type":"subflow","name":"[DC] Humidifier Control","info":"","category":"","in":[{"x":100,"y":220,"wires":[{"id":"5a304b9bb5768c6d"}]}],"out":[],"env":[],"meta":{"module":"Humidifier Control","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"ec5c725ee75a9844","type":"subflow","name":"[AC] Automatic Air Control","info":"","category":"","in":[{"x":80,"y":340,"wires":[{"id":"684e5d7333845748"}]}],"out":[],"env":[],"meta":{"module":"Automatic Air Control","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"212fab6742856947","type":"subflow","name":"[DC] Exhaust Control","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"c6925c186cecf2d8"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"74881f2bcec47597","type":"subflow","name":"[DC] Dehumidifier Control","info":"","category":"","in":[{"x":80,"y":220,"wires":[{"id":"f84eb56c1cc6746a"}]}],"out":[],"env":[],"meta":{"module":"Dehumidifier Control","author":"GrowBot Open Source","license":"MIT"},"color":"#3FADB5"},{"id":"0dd1d006a8b8f409","type":"subflow","name":"[DC] AC Control","info":"","category":"","in":[{"x":80,"y":140,"wires":[{"id":"9afc0850d308ec1d"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"10a83d488a0a131c","type":"subflow","name":"[AC] VPD Mode","info":"","category":"","in":[{"x":40,"y":160,"wires":[{"id":"102c78e301ee1951"},{"id":"4abedff48d1ba25d"}]}],"out":[],"env":[],"meta":{"module":"VPD Mode","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"4fa2fd5f290d5aa6","type":"subflow","name":"[AC] Static Mode","info":"","category":"","in":[{"x":60,"y":100,"wires":[]}],"out":[],"env":[],"meta":{"module":"Static Mode","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"6a2ce38a59833948","type":"subflow","name":"[DC] Heater Control","info":"","category":"","in":[{"x":120,"y":180,"wires":[{"id":"8b774828d11801b5"}]}],"out":[],"env":[],"meta":{"module":"Heater Control","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"b5aa3878800d49e9","type":"subflow","name":"[AC] Get Area Data","info":"","category":"","in":[{"x":100,"y":140,"wires":[{"id":"671dd925b4d1dfb3"}]}],"out":[{"x":2260,"y":280,"wires":[{"id":"4b2569dea98486e8","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":2200,"y":140,"wires":[{"id":"6b30ba39de38c5a4","port":0},{"id":"4b2569dea98486e8","port":0}]}},{"id":"b4b2531597d803dd","type":"subflow","name":"[DC] Get Device States","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"25cf48084f8ad781"}]}],"out":[{"x":1980,"y":140,"wires":[{"id":"7469ef41ccc0a832","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"954c251ffd79aa2f","type":"subflow","name":"[DC] Device Main Control","info":"","category":"","in":[{"x":60,"y":180,"wires":[{"id":"15c5108355edd135"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"c587d7b380dc9b37","type":"ha-device-config","name":"area_1_vpd","hwVersion":"","manufacturer":"Node-RED","model":"","swVersion":"","server":""},{"id":"25ccff830bb64afb","type":"ha-entity-config","server":"","deviceConfig":"c587d7b380dc9b37","name":"area_1_vpd","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"area_1_vpd"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":true,"debugEnabled":false},{"id":"28d3f52d982aa3b8","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":830,"y":80,"wires":[[]]},{"id":"f69b57236b2a90aa","type":"function","z":"6b9ca77e99021ecb","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":140,"wires":[["883e73e5860e1659"]]},{"id":"883e73e5860e1659","type":"function","z":"6b9ca77e99021ecb","name":"Area 1 State Switch","func":"var deviceState = msg.payload.DeviceState;\n\nif(deviceState === \"fullPower\") {\n    return [msg, null, null];\n} else if(deviceState === \"off\") {\n    return [null, msg, null];\n} else if(deviceState === \"intervalPower\") {\n    return [null, null, msg];\n}else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":140,"wires":[["28d3f52d982aa3b8"],["1de4b573f16eb4ea"],["525ca1e768a81407"]]},{"id":"1de4b573f16eb4ea","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":830,"y":140,"wires":[[]]},{"id":"525ca1e768a81407","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":830,"y":300,"wires":[["87178689a6c23671"]]},{"id":"a25d5d7434b0889a","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1330,"y":300,"wires":[[]]},{"id":"87178689a6c23671","type":"function","z":"6b9ca77e99021ecb","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nif (intervalDuration === null){\n    intervalDuration = 10000;\n}\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1090,"y":300,"wires":[["a25d5d7434b0889a"]]},{"id":"2f05f6fc710607c3","type":"api-current-state","z":"6b9ca77e99021ecb","name":"Abruf Interval Dauer","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_exhaust_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":840,"y":380,"wires":[[]]},{"id":"c4572dd0ecfc34eb","type":"function","z":"8e26e62af8447a92","name":"Calculate VPD","func":"function calculateVPD(tempAir, tempLeaf, relHum) {\n    tempAir = parseFloat(tempAir);\n    tempLeaf = parseFloat(tempLeaf);\n    relHum = parseFloat(relHum);\n\n    if (isNaN(tempAir) || isNaN(tempLeaf) || isNaN(relHum)) {\n        return \"unavailable\";\n    }\n\n    let sdpAir = 0.6108 * Math.exp((17.27 * tempAir) / (tempAir + 237.3));\n    let sdpLeaf = 0.6108 * Math.exp((17.27 * tempLeaf) / (tempLeaf + 237.3));\n    let adp = (relHum / 100) * sdpAir;\n    let vpd = sdpLeaf - adp;\n\n    return vpd.toFixed(2);\n}\n\nlet tempAir = msg.payload.CurrentTempAir; \nlet tempLeaf = msg.payload.CurrentTempLeaf; \nlet relHum = msg.payload.CurrentHum; \n\nlet vpd = calculateVPD(tempAir, tempLeaf, relHum);\n\nmsg.payload = parseFloat(vpd);\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":120,"wires":[[]]},{"id":"31f9bb08d9deaddd","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":910,"y":140,"wires":[[]]},{"id":"ff442efcf560336f","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":910,"y":240,"wires":[[]]},{"id":"6dadbe7b6c2d52c7","type":"debug","z":"54acf8fbb7d3b1d7","name":"Debug Humidifier Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":436,"y":418,"wires":[]},{"id":"5a304b9bb5768c6d","type":"function","z":"54acf8fbb7d3b1d7","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":220,"wires":[["2ae7c5f5120d4e8d"]]},{"id":"2ae7c5f5120d4e8d","type":"function","z":"54acf8fbb7d3b1d7","name":"Area 1 State Switch","func":"var deviceState = msg.payload.DeviceState;\n\nif(deviceState === \"fullPower\") {\n    return [msg, null, null];\n} else if(deviceState === \"off\") {\n    return [null, msg, null];\n} else if(deviceState === \"intervalPower\") {\n    return [null, null, msg];\n}else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":220,"wires":[["31f9bb08d9deaddd"],["ff442efcf560336f"],["0ed7f180b907c0ce","7bd7cef2261e161c"]]},{"id":"de18722775d83b91","type":"function","z":"54acf8fbb7d3b1d7","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":460,"wires":[["2000f98f3d2cc3db"]]},{"id":"3d875ff0e8757b3f","type":"change","z":"54acf8fbb7d3b1d7","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1100,"y":380,"wires":[["7eafaebac2e4cfe6"]]},{"id":"fadbfc071d94820b","type":"change","z":"54acf8fbb7d3b1d7","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1100,"y":460,"wires":[["7eafaebac2e4cfe6"]]},{"id":"7eafaebac2e4cfe6","type":"join","z":"54acf8fbb7d3b1d7","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1380,"y":460,"wires":[["2d2cd4f02bb8e6e0"]]},{"id":"2d2cd4f02bb8e6e0","type":"function","z":"54acf8fbb7d3b1d7","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1570,"y":460,"wires":[["de18722775d83b91"]]},{"id":"0ed7f180b907c0ce","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":890,"y":380,"wires":[["3d875ff0e8757b3f"]]},{"id":"2000f98f3d2cc3db","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1930,"y":460,"wires":[[]]},{"id":"7bd7cef2261e161c","type":"api-current-state","z":"54acf8fbb7d3b1d7","name":"Abruf Interval Dauer","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_humidifier_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":880,"y":460,"wires":[["fadbfc071d94820b"]]},{"id":"95b65c050a3d120c","type":"function","z":"ec5c725ee75a9844","name":"Control Flow Switch","func":"var airControlMode = msg.payload.AirControlMode;\n\nif (airControlMode === \"VPD\") {\n    return [msg, null, null];\n} else if (airControlMode === \"Static\") {\n    return [null, msg, null];\n} else if (airControlMode === \"Temp\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":340,"wires":[["de277180871ae340"],["b814147560631f23"]]},{"id":"de277180871ae340","type":"subflow:10a83d488a0a131c","z":"ec5c725ee75a9844","name":"","x":880,"y":260,"wires":[]},{"id":"b814147560631f23","type":"subflow:4fa2fd5f290d5aa6","z":"ec5c725ee75a9844","name":"","x":890,"y":340,"wires":[]},{"id":"684e5d7333845748","type":"function","z":"ec5c725ee75a9844","name":"Get AirControl ToDos","func":"var area = msg.payload.Area\nvar minHum = msg.payload.MinHum\nvar minTempAir = msg.payload.MinTempAir\nvar minVpd = msg.payload.MinVpd\nvar maxHum = msg.payload.MaxHum\nvar maxTempAir = msg.payload.MaxTempAir\nvar maxVpd = msg.payload.MaxVpd\nvar targetHum = msg.payload.TargetHum\nvar targetTempAir = msg.payload.TargetTempAir\nvar targetVpd = msg.payload.TargetVpd\nvar currentHum = msg.payload.CurrentHum\nvar currentTempAir = msg.payload.CurrentTempAir\nvar currentVpd = msg.payload.CurrentVpd\nvar airControlPrio = msg.payload.AirControlPrio\nvar airControlMode = msg.payload.AirControlMode\nvar exhaustEqualsAC = msg.payload.ExhaustEqualsAC\nvar exhaustEqualsDehumidifier = msg.payload.ExhaustEqualsDehumidifier\n\nvar dehumidifierState = msg.payload.DehumidifierState;\nvar exhaustState = msg.payload.ExhaustState;\nvar heaterState = msg.payload.HeaterState;\nvar humidifierState = msg.payload.HumidifierState;\nvar ventilationState = msg.payload.VentilationState;\nvar lightState = msg.payload.LightState;\n\nvar dehumidifierIsDimmable = msg.payload.DehumidifierIsDimmable;\nvar exhaustIsDimmable = msg.payload.ExhaustIsDimmable;\nvar heaterIsDimmable = msg.payload.HeaterIsDimmable;\nvar humidifierIsDimmable = msg.payload.HumidifierIsDimmable;\nvar ventilationIsDimmable = msg.payload.VentilationIsDimmable;\nvar lightIsDimmable = msg.payload.LightIsDimmable;\n\nvar vpdState\nvar tempAirState\nvar humState\n\nif(currentVpd >= maxVpd){\n    vpdState = \"high\"\n} else if (currentVpd <= maxVpd && currentVpd >= targetVpd){\n    vpdState = \"medium-high\"\n} else if (currentVpd == targetVpd) {\n    vpdState = \"perfect\"\n} else if (currentVpd <= targetVpd && currentVpd >= minVpd) {\n    vpdState = \"medium-low\"\n} else if (currentVpd <= minVpd) {\n    vpdState = \"low\"\n} else {\n    vpdState = null\n}\n\nif(currentTempAir >= maxTempAir){\n    tempAirState = \"high\"\n} else if (currentTempAir <= maxTempAir && currentTempAir >= targetTempAir){\n    tempAirState = \"medium-high\"\n} else if (currentTempAir == targetTempAir) {\n    tempAirState = \"perfect\"\n} else if (currentTempAir <= targetTempAir && currentTempAir >= minTempAir) {\n    tempAirState = \"medium-low\"\n} else if (currentTempAir <= minTempAir) {\n    tempAirState = \"low\"\n} else {\n    tempAirState = null\n}\n\nif(currentHum >= maxHum){\n    humState = \"high\"\n} else if (currentHum <= maxHum && currentHum >= targetHum){\n    humState = \"medium-high\"\n} else if (currentHum == targetHum) {\n    humState = \"perfect\"\n} else if (currentHum <= targetHum && currentHum >= minHum) {\n    humState = \"medium-low\"\n} else if (currentHum <= minHum) {\n    humState = \"low\"\n} else {\n    humState = null\n}\n\nif(exhaustEqualsAC === \"on\"){\n    exhaustEqualsAC = true;\n}else{\n    exhaustEqualsAC = false;\n}\n\nif (exhaustEqualsDehumidifier === \"on\") {\n    exhaustEqualsDehumidifier = true;\n} else {\n    exhaustEqualsDehumidifier = false;\n}\n\nmsg.payload = {\n    \"Area\": area,\n    \"AirControlMode\": airControlMode,\n    \"AirControlPrio\": airControlPrio,\n    \"VpdState\": vpdState,\n    \"TempAirState\": tempAirState,\n    \"HumState\": humState,\n    \"DehumidifierState\": dehumidifierState,\n    \"ExhaustState\": exhaustState,\n    \"HeaterState\": heaterState,\n    \"HumidifierState\": humidifierState,\n    \"VentilationState\": ventilationState,\n    \"LightState\": lightState,\n    \"DehumidifierIsDimmable\": dehumidifierIsDimmable,\n    \"ExhaustIsDimmable\": exhaustIsDimmable,\n    \"HeaterIsDimmable\": heaterIsDimmable,\n    \"HumidifierIsDimmable\": humidifierIsDimmable,\n    \"VentilationIsDimmable\": ventilationIsDimmable,\n    \"LightIsDimmable\": lightIsDimmable,\n    \"ExhaustEqualsAC\": exhaustEqualsAC,\n    \"ExhaustEqualsDehumidifer\": exhaustEqualsDehumidifier\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":260,"y":340,"wires":[["95b65c050a3d120c"]]},{"id":"6139687e62dfadfb","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":820,"y":80,"wires":[[]]},{"id":"c6925c186cecf2d8","type":"function","z":"212fab6742856947","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":140,"wires":[["8b9cc2616fd1637c"]]},{"id":"8b9cc2616fd1637c","type":"function","z":"212fab6742856947","name":"Area 1 State Switch","func":"var deviceState = msg.payload.DeviceState;\n\nif(deviceState === \"fullPower\") {\n    return [msg, null, null];\n} else if(deviceState === \"off\") {\n    return [null, msg, null];\n} else if(deviceState === \"intervalPower\") {\n    return [null, null, msg];\n}else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":140,"wires":[["6139687e62dfadfb"],["9206a2e6ab35134f"],["479da26fb88ec330","959e2d1fca0fac5d"]]},{"id":"9206a2e6ab35134f","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":820,"y":140,"wires":[[]]},{"id":"479da26fb88ec330","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":820,"y":300,"wires":[["33e0f66adbe3969e"]]},{"id":"aebeb59e3412808d","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1880,"y":380,"wires":[[]]},{"id":"c7f742f93b30aa02","type":"function","z":"212fab6742856947","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":380,"wires":[["aebeb59e3412808d"]]},{"id":"1df159ca1edfa02e","type":"debug","z":"212fab6742856947","name":"Debug Exhaust Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1870,"y":480,"wires":[]},{"id":"33e0f66adbe3969e","type":"change","z":"212fab6742856947","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1060,"y":300,"wires":[["e1fddc56eb4d3655"]]},{"id":"5ff70cb7345aa161","type":"change","z":"212fab6742856947","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1060,"y":380,"wires":[["e1fddc56eb4d3655"]]},{"id":"e1fddc56eb4d3655","type":"join","z":"212fab6742856947","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1340,"y":380,"wires":[["7b19dfef03a82750"]]},{"id":"7b19dfef03a82750","type":"function","z":"212fab6742856947","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1530,"y":380,"wires":[["c7f742f93b30aa02"]]},{"id":"959e2d1fca0fac5d","type":"api-current-state","z":"212fab6742856947","name":"Abruf Interval Dauer","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_exhaust_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":820,"y":380,"wires":[["5ff70cb7345aa161"]]},{"id":"59d7bd61cf1d8f39","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":900,"y":140,"wires":[[]]},{"id":"f35188aa6fe011f6","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":900,"y":240,"wires":[[]]},{"id":"04527c39c1600513","type":"debug","z":"74881f2bcec47597","name":"Debug Dehumidifier Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":560,"y":420,"wires":[]},{"id":"f84eb56c1cc6746a","type":"function","z":"74881f2bcec47597","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":220,"wires":[["a93f5b5883ab3270"],[],[]]},{"id":"a93f5b5883ab3270","type":"function","z":"74881f2bcec47597","name":"Area 1 State Switch","func":"var deviceState = msg.payload.DeviceState;\n\nif(deviceState === \"fullPower\") {\n    return [msg, null, null];\n} else if(deviceState === \"off\") {\n    return [null, msg, null];\n} else if(deviceState === \"intervalPower\") {\n    return [null, null, msg];\n}else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":220,"wires":[["59d7bd61cf1d8f39"],["f35188aa6fe011f6"],["757417e563911421","77db5cbb3fce143d"]]},{"id":"0ebaf3ea84e4f823","type":"function","z":"74881f2bcec47597","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":460,"wires":[["c84c3b44f49cc655"]]},{"id":"836da4c1cdf04e2e","type":"change","z":"74881f2bcec47597","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1120,"y":380,"wires":[["b2d8d1bb6f50c60b"]]},{"id":"371ccfce76c62295","type":"change","z":"74881f2bcec47597","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1120,"y":460,"wires":[["b2d8d1bb6f50c60b"]]},{"id":"b2d8d1bb6f50c60b","type":"join","z":"74881f2bcec47597","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1380,"y":460,"wires":[["700a79435467ea27"]]},{"id":"700a79435467ea27","type":"function","z":"74881f2bcec47597","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1590,"y":460,"wires":[["0ebaf3ea84e4f823"]]},{"id":"757417e563911421","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":900,"y":380,"wires":[["836da4c1cdf04e2e"]]},{"id":"c84c3b44f49cc655","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1960,"y":460,"wires":[[]]},{"id":"77db5cbb3fce143d","type":"api-current-state","z":"74881f2bcec47597","name":"Abruf Interval Dauer","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_dehumidifier_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":900,"y":460,"wires":[["371ccfce76c62295"]]},{"id":"9afc0850d308ec1d","type":"debug","z":"0dd1d006a8b8f409","name":"Debug AC Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":370,"y":260,"wires":[]},{"id":"102c78e301ee1951","type":"function","z":"10a83d488a0a131c","name":"Get AirControl States","func":"// environment values\nvar area = msg.payload.Area\nvar airControlPrio = msg.payload.AirControlPrio\nvar vpdState = msg.payload.VpdState\nvar tempAirState = msg.payload.TempAirState\nvar humState = msg.payload.HumState\n// dimmable values\nvar exhaustIsDimmable = msg.payload.ExhaustIsDimmable;\nvar heaterIsDimmable = msg.payload.HeaterIsDimmable;\nvar ventilationIsDimmable = msg.payload.VentilationIsDimmable;\nvar humidifierIsDimmable = msg.payload.HumidifierIsDimmable;\nvar dehumidifierIsDimmable = msg.payload.DehumidifierIsDimmable;\nvar lightIsDimmable = msg.payload.LightIsDimmable;\n// device states\nvar lastExhaustState = msg.payload.ExhaustState;\nvar lastHeaterState = msg.payload.HeaterState;\nvar lastHumidifierState = msg.payload.HumidifierState;\nvar lastDehumidifierState = msg.payload.DehumidifierState;\nvar lastVentilationState = msg.payload.VentilationState;\nvar lastLightState = msg.payload.LightState;\n// tasks\nvar exhaustTask\nvar heaterTask\nvar ventilationTask\nvar humidifierTask\nvar dehumidifierTask\nvar lightTask = \"none\"; //TODO: if temp is to high dimm light down or if to low dimm up until max amount for this stage \n\n\nif (airControlPrio === \"Temperature\") {\n    // if prio is on temp we adjust the temp directly and the hum regarding the VPD\n    // Tasks are adjust Temp; Hum trough VPD; Ventilation\n    // exhaust & heater\n    if (lastLightState === \"fullPower\") {\n        if (tempAirState === \"high\") {\n            exhaustTask = \"fullPower\";\n            heaterTask = \"off\";\n        } else if (tempAirState === \"medium-high\") { //TODO adjust this statement\n            if (exhaustIsDimmable === true && lastExhaustState === \"fullPower\") {\n                exhaustTask = \"dimmDown\";\n            } else if (exhaustIsDimmable === true) {\n                exhaustTask = \"dimmUp\";\n            } else if (exhaustIsDimmable === false) {\n                exhaustTask = \"intervalPower\"\n            } else {\n                exhaustTask = null\n            }\n            heaterTask = \"off\";\n        } else if (tempAirState === \"perfect\") {\n            exhaustTask = \"off\";\n            heaterTask = \"off\";\n        } else if (tempAirState === \"medium-low\") { ////TODO adjust this statement\n            exhaustTask = \"off\";\n            if (heaterIsDimmable === true && lastHeaterState === \"fullPower\") {\n                heaterTask = \"dimmDown\";\n            } else if (heaterIsDimmable === true) {\n                heaterTask = \"dimmUp\";\n            } else if (heaterIsDimmable === false) {\n                heaterTask = \"intervalPower\"\n            } else {\n                heaterTask = null\n            }\n        } else if (tempAirState === \"low\") {\n            exhaustTask = \"off\";\n            heaterTask = \"fullPower\";\n        } else {\n            exhaustTask = null;\n            heaterTask = null;\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n            humidifierTask = \"fullPower\";\n            dehumidifierTask = \"off\";\n        } else if (vpdState === \"medium-high\") {\n            if (humidifierIsDimmable === true && lastHumidifierState === \"fullPower\") {\n                humidifierTask = \"dimmDown\";\n            } else if (humidifierIsDimmable === true) {\n                humidifierTask = \"dimmUp\";\n            } else if (humidifierIsDimmable === false) {\n                humidifierTask = \"intervalPower\"\n            } else {\n                humidifierTask = null\n            }\n            dehumidifierTask = \"off\";\n        } else if (vpdState === \"perfect\") {\n            humidifierTask = \"off\";\n            dehumidifierTask = \"off\";\n        } else if (vpdState === \"medium-low\") {\n            humidifierTask = \"off\";\n            if (dehumidifierIsDimmable === true && lastDehumidifierState === \"fullPower\") {\n                dehumidifierTask = \"dimmDown\";\n            } else if (dehumidifierIsDimmable === true) {\n                dehumidifierTask = \"dimmUp\";\n            } else if (dehumidifierIsDimmable === false) {\n                dehumidifierTask = \"intervalPower\"\n            } else {\n                dehumidifierTask = null\n            }\n        } else if (vpdState === \"low\") {\n            humidifierTask = \"off\";\n            dehumidifierTask = \"fullPower\";\n        } else {\n            humidifierTask = null; //maybe here off\n            dehumidifierTask = null; //maybe here off\n        }\n    } else {\n        // if light is off\n        if (tempAirState === \"high\") {\n            exhaustTask = \"intervalPower\"; // intervall power if humidity is outside tent higher than inside \n            heaterTask = \"off\";\n        } else if (tempAirState === \"medium-high\") { //TODO adjust this statement\n            if (exhaustIsDimmable === true && lastExhaustState === \"fullPower\") {\n                exhaustTask = \"off\"; // maybe dimm down\n            } else if (exhaustIsDimmable === true) {\n                exhaustTask = \"off\"; // maybe dimm up\n            } else if (exhaustIsDimmable === false) {\n                exhaustTask = \"off\";\n            } else {\n                exhaustTask = \"off\"\n            }\n            heaterTask = \"off\";\n        } else if (tempAirState === \"perfect\") {\n            exhaustTask = \"off\";\n            heaterTask = \"off\";\n        } else if (tempAirState === \"medium-low\") { ////TODO adjust this statement\n            exhaustTask = \"off\";\n            if (heaterIsDimmable === true && lastHeaterState === \"fullPower\") {\n                heaterTask = \"off\"; // maybe dimm down\n            } else if (heaterIsDimmable === true) {\n                heaterTask = \"off\" // maybe dimm up                \n            } else if (heaterIsDimmable === false) {\n                heaterTask = \"off\"\n            } else {\n                heaterTask = \"off\"\n            }\n        } else if (tempAirState === \"low\") {\n            exhaustTask = \"off\";\n            heaterTask = \"intervalPower\";\n        } else {\n            exhaustTask = \"off\"\n            heaterTask = \"off\"\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n                humidifierTask = \"off\"; \n                // plants will adjust it on their own else it could be fullpower or intervalpower\n                dehumidifierTask = \"off\";\n            \n            } else if (vpdState === \"medium-high\") {\n            if (humidifierIsDimmable === true && lastHumidifierState === \"fullPower\") {\n                    humidifierTask = \"dimmDown\";\n                } else if (humidifierIsDimmable === true) {\n                    // add evaluation of light state\n                    humidifierTask = \"dimmUp\"\n                } else if (humidifierIsDimmable === false) {\n                    // at night plants will do it on their own\n                    humidifierTask = \"off\";\n                } else {\n                    humidifierTask = null\n                }\n                // prereact to the humidity of the plants\n                dehumidifierTask = \"fullPower\"; \n        } else if (vpdState === \"perfect\") {\n            humidifierTask = \"off\";\n            // prereact of the high humidity from plants\n            dehumidifierTask = \"fullPower\";\n        } else if (vpdState === \"medium-low\") {\n            humidifierTask = \"off\";\n            if (dehumidifierIsDimmable === true && lastDehumidifierState === \"fullPower\") {\n                    dehumidifierTask = \"dimmDown\";\n                } else if (dehumidifierIsDimmable === true) {\n                    dehumidifierTask = \"dimmUp\";\n                } else if (dehumidifierIsDimmable === false) {\n                    dehumidifierTask = \"fullPower\";\n                } else {\n                    dehumidifierTask = null\n                }\n        } else if (vpdState === \"low\") {\n            humidifierTask = \"off\";\n            dehumidifierTask = \"fullPower\";\n        } else {\n            humidifierTask = null;\n            dehumidifierTask = null;\n        }\n    }\n\n    // Prio is on Humidity ----- Is this needed????\n    /* adjust here ---------------------------------------------------\n    */\n} else if (airControlPrio === \"Humidity\") {\n    // if prio is on hum we adjust the hum directly and the temp regarding the VPD\n    /*if (humState === \"high\") {\n        humidifierTask = \"off\";\n        dehumidifierTask = \"fullPower\";\n    } else if (tempAirState === \"medium-high\") { //TODO adjust this statement\n        if (dehumidifierIsDimmable === true && lastDehumidifierState === \"fullPower\") {\n            dehumidifierTask = \"dimmDown\";\n        } else if (exhaustIsDimmable === true) {\n            dehumidifierTask = \"dimmUp\";\n        } else if (exhaustIsDimmable === false) {\n            dehumidifierTask = \"intervalPower\"\n        } else {\n            dehumidifierTask = null\n        }\n        humidifierTask = \"off\";\n    } else if (humState === \"perfect\") {\n        humidifierTask = \"off\";\n        dehumidifierTask = \"off\";\n    } else if (humState === \"medium-low\") { ////TODO adjust this statement\n        dehumidifierTask = \"off\";\n        if (humidifierIsDimmable === true && lastHumidifierState === \"fullPower\") {\n            humidifierTask = \"dimmDown\";\n        } else if (humidifierIsDimmable === true) {\n            humidifierTask = \"dimmUp\";\n        } else if (humidifierIsDimmable === false) {\n            humidifierTask = \"intervalPower\"\n        } else {\n            humidifierTask = null\n        }\n    } else if (humState === \"low\" && lastLightState === \"off\") {\n        dehumidifierTask = \"off\";\n        humidifierTask = \"fullPower\";\n    } else {\n        dehumidifierTask = \"off\"\n        humidifierTask = \"off\"\n    }\n\n    // humidifier & dehumidifier task\n    if (vpdState === \"high\") {\n        exhaustTask = \"fullPower\";\n        heaterTask = \"off\";\n\n        // implement if light is on here\n    } else if (vpdState === \"medium-high\") {\n        // implement if light is on here\n\n        if (exhaustIsDimmable === true && lastExhaustState === \"fullPower\") {\n            exhaustTask = \"dimmDown\";\n        } else if (exhaustIsDimmable === true) {\n            exhaustTask = \"dimmUp\";\n        } else if (exhaustIsDimmable === false) {\n            exhaustTask = \"intervalPower\"\n        } else {\n            exhaustTask = null\n        }\n        heaterTask = \"off\";\n    } else if (vpdState === \"perfect\") {\n        exhaustTask = \"off\";\n        heaterTask = \"off\";\n    } else if (vpdState === \"medium-low\") {\n        exhaustTask = \"off\";\n        // implement if light is on here\n        if (heaterIsDimmable === true && lastHeaterState === \"fullPower\") {\n            heaterTask = \"dimmDown\";\n        } else if (heaterIsDimmable === true) {\n            heaterTask = \"dimmUp\";\n        } else if (heaterIsDimmable === false) {\n            heaterTask = \"intervalPower\"\n        } else {\n            heaterTask = null\n        }\n    } else if (vpdState === \"low\") {\n        exhaustTask = \"off\";\n        heaterTask = \"fullPower\";\n    } else {\n        exhaustTask = null;\n        heaterTask = null;\n    }*/\n}\n\n// ventilation is general independent from AirControlPrio\n/* ventilation show be turn off / on from automatic and only additional strong ventilation should be set on if needed\n\n\nif (tempAirState === \"high\" || humState === \"high\") {\n    ventilationTask = \"fullPower\"\n    // or on if not dimmable\n} else if (tempAirState === \"medium-high\" || humState === \"medium-high\" || tempAirState === \"medium-low\" || humState === \"medium-low\") { //TODO adjust this statement\n    if (ventilationIsDimmable === true && lastVentilationState === \"FullPower\") {\n        ventilationTask = \"dimmDown\"\n    } else if (ventilationIsDimmable === true) {\n        ventilationTask = \"dimmUp\"\n    } else {\n        ventilationTask = \"intervallPower\"\n    }\n} else if (tempAirState === \"perfect\") {\n    ventilationTask = \"off\"\n} else {\n    ventilationTask = null\n}\n*/\n\n// check if current state is task state\nif (exhaustTask === lastExhaustState || (exhaustTask === \"intervalTask\" && lastExhaustState === \"fullPower\")) {\n    exhaustTask = \"none\";\n}\nif ((heaterTask === lastHeaterState) || (heaterTask === lastLightState) || (heaterTask === \"intervalTask\" && lastHeaterState === \"fullPower\")) {\n    heaterTask = \"none\";\n}\nif (ventilationTask === lastVentilationState || (ventilationTask === \"intervalTask\" && lastVentilationState === \"fullPower\")) {\n    ventilationTask = \"none\";\n}\nif (humidifierTask === lastHumidifierState || (humidifierTask === \"intervalTask\" && lastHumidifierState === \"fullPower\")) {\n    humidifierTask = \"none\";\n}\nif (dehumidifierTask === lastDehumidifierState || (dehumidifierTask === \"intervalTask\" && lastDehumidifierState === \"fullPower\")) {\n    dehumidifierTask = \"none\";\n}\nif (lightTask === lastLightState) {\n    lightTask = \"none\";\n}\n\n/* This statements make the conditions incorrect: TODO have to fix this \n// react to incorrect statements to not create a loop\nif (dehumidifierTask === humidifierTask) {\n    dehumidifierTask = \"off\";\n    humidifierTask = \"off\";\n}\nif (heaterTask === exhaustTask) {\n    exhaustTask = \"off\";\n    heaterTask = \"off\";\n}\n*/\n\n//msg creation\nmsg.payload = {\n    \"Area\": area,\n    \"ExhaustTask\": exhaustTask,\n    \"HeaterTask\": heaterTask,\n    \"VentilationTask\": ventilationTask,\n    \"HumidifierTask\": humidifierTask,\n    \"DehumidifierTask\": dehumidifierTask,\n    \"LightTask\": lightTask\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":220,"y":160,"wires":[["7f9f38925a92afb6","4abedff48d1ba25d"]]},{"id":"7f9f38925a92afb6","type":"subflow:954c251ffd79aa2f","z":"10a83d488a0a131c","name":"","x":510,"y":160,"wires":[]},{"id":"4abedff48d1ba25d","type":"debug","z":"10a83d488a0a131c","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":240,"wires":[]},{"id":"b273396fda3a8a92","type":"comment","z":"10a83d488a0a131c","name":"ToDos","info":" - Exhaust eq Dehumidifer einfügen\n\n - prio on humidity einfügen \n\n ","x":210,"y":260,"wires":[]},{"id":"83e97a2adaacc112","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":980,"y":100,"wires":[[]]},{"id":"f74dbf567eb9de1a","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":980,"y":200,"wires":[[]]},{"id":"0c6f64eb211ff1da","type":"debug","z":"6a2ce38a59833948","name":"Debug Heater Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":420,"y":360,"wires":[]},{"id":"867484e968170b3b","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater on","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":340,"wires":[["f5052658bd3a5306"]]},{"id":"71e887c174bc11d4","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater off","server":"","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2020,"y":420,"wires":[[]]},{"id":"8b774828d11801b5","type":"function","z":"6a2ce38a59833948","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":180,"wires":[[]]},{"id":"8b2035a050fc7f97","type":"function","z":"6a2ce38a59833948","name":"Area 1 State Switch","func":"var deviceState = msg.payload.DeviceState;\n\nif(deviceState === \"fullPower\") {\n    return [msg, null, null];\n} else if(deviceState === \"off\") {\n    return [null, msg, null];\n} else if(deviceState === \"intervalPower\") {\n    return [null, null, msg];\n}else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":180,"wires":[["83e97a2adaacc112"],["f74dbf567eb9de1a"],["867484e968170b3b","68057ce936a9d5ce"]]},{"id":"0ab12aa607821cfc","type":"function","z":"6a2ce38a59833948","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":420,"wires":[["71e887c174bc11d4"]]},{"id":"f5052658bd3a5306","type":"change","z":"6a2ce38a59833948","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1160,"y":340,"wires":[["7b35fcc0ff2166b0"]]},{"id":"134909cd7a25fa59","type":"change","z":"6a2ce38a59833948","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1180,"y":420,"wires":[["7b35fcc0ff2166b0"]]},{"id":"7b35fcc0ff2166b0","type":"join","z":"6a2ce38a59833948","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1440,"y":420,"wires":[["ca247b168393d0b8"]]},{"id":"ca247b168393d0b8","type":"function","z":"6a2ce38a59833948","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":420,"wires":[["0ab12aa607821cfc"]]},{"id":"68057ce936a9d5ce","type":"api-current-state","z":"6a2ce38a59833948","name":"Abruf Interval Dauer","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_heater_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":960,"y":420,"wires":[["134909cd7a25fa59"]]},{"id":"671dd925b4d1dfb3","type":"api-current-state","z":"b5aa3878800d49e9","name":"Area 1 Current Data","server":"","version":3,"outputs":1,"h... (19 kB verbleibend)
