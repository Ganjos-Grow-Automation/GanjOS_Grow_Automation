[{"id":"7929e89f8e2ce39c","type":"subflow","name":"[AC] Get target data","info":"","category":"","in":[{"x":40,"y":720,"wires":[{"id":"4243cc935ef6ac2e"}]}],"out":[{"x":2120,"y":700,"wires":[{"id":"548eedb75b752fc7","port":0},{"id":"97107b4db5d65e29","port":0}]}],"env":[],"meta":{"author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"0d99586271547928","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get temp air","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_data_air_temp","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":450,"y":200,"wires":[["e820fe84253cfd3a"]]},{"id":"e820fe84253cfd3a","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":200,"wires":[["ad98ba747e001272"]]},{"id":"0b25a73902c7ff60","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":260,"wires":[["520af1a4deb459c9"]]},{"id":"ad98ba747e001272","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxTempAir = msg.payload.MaxTempAir\nvar targetTempAir = msg.payload.TargetTempAir\nvar minTempAir = msg.payload.MinTempAir\nvar currentTempAir = msg.payload.CurrentTempAir\n\n\nmsg.payload = {\n    \"MaxTempAir\": maxTempAir,\n    \"TargetTempAir\": targetTempAir,\n    \"MinTempAir\": minTempAir,\n    \"CurrentTempAir\": currentTempAir\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":200,"wires":[["d645181d03d5c6d4"]]},{"id":"520af1a4deb459c9","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxHum = msg.payload.MaxHum\nvar targetHum = msg.payload.TargetHum\nvar minHum = msg.payload.MinHum\nvar currentHum = msg.payload.CurrentHum\n\n\nmsg.payload = {\n    \"MaxHum\": maxHum,\n    \"TargetHum\": targetHum,\n    \"MinHum\": minHum,\n    \"CurrentHum\": currentHum\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":260,"wires":[["bd0c91f28f597bda"]]},{"id":"d645181d03d5c6d4","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"tempAirData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":200,"wires":[["b11273135a7949fc"]]},{"id":"bd0c91f28f597bda","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"humData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":260,"wires":[["b11273135a7949fc"]]},{"id":"d0a97fd11a24f58e","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get hum ","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_data_air_hum","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":260,"wires":[["0b25a73902c7ff60"]]},{"id":"9c6963d6cb56cfa4","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get vpd","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_data_air_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":320,"wires":[["81d776695239d092"]]},{"id":"712666963835ce25","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get co2","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_data_air_co2","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":380,"wires":[["6fd47a688e0ac290"]]},{"id":"81d776695239d092","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":320,"wires":[["815d8c7da6b9bdf9"]]},{"id":"6fd47a688e0ac290","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":380,"wires":[["380fef730610324b"]]},{"id":"815d8c7da6b9bdf9","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxVpd = msg.payload.MaxVpd\nvar targetVpd = msg.payload.TargetVpd\nvar minVpd = msg.payload.MinVpd\nvar currentVpd = msg.payload.CurrentVpd\n\n\nmsg.payload = {\n    \"MaxVpd\": maxVpd,\n    \"TargetVpd\": targetVpd,\n    \"MinVpd\": minVpd,\n    \"CurrentVpd\": currentVpd\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":320,"wires":[["2c9c885b2174aff6"]]},{"id":"380fef730610324b","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxCO2 = msg.payload.MaxCO2\nvar targetCO2 = msg.payload.TargetCO2\nvar minCO2 = msg.payload.MinCO2\nvar currentCO2 = msg.payload.CurrentCO2\n\n\nmsg.payload = {\n    \"MaxCO2\": maxCO2,\n    \"TargetCO2\": targetCO2,\n    \"MinCO2\": minCO2,\n    \"CurrentCO2\": currentCO2\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":380,"wires":[["5edc2f1496d5cabc"]]},{"id":"2c9c885b2174aff6","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"vpdData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":320,"wires":[["b11273135a7949fc"]]},{"id":"5edc2f1496d5cabc","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"co2Data","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":380,"wires":[["b11273135a7949fc"]]},{"id":"b11273135a7949fc","type":"join","z":"7929e89f8e2ce39c","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1520,"y":300,"wires":[["548eedb75b752fc7"]]},{"id":"548eedb75b752fc7","type":"function","z":"7929e89f8e2ce39c","name":"merge","func":"msg.payload = { ...msg.payload.tempAirData, ...msg.payload.humData, ...msg.payload.vpdData, ...msg.payload.co2Data }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":300,"wires":[[]]},{"id":"4243cc935ef6ac2e","type":"function","z":"7929e89f8e2ce39c","name":"area switch","func":"var area = msg.payload.Area\n\nif(area === \"area_1\"){\n    return [msg, null, null]\n} else if (area === \"area_2\"){\n    return [null,msg, null, null]\n} else if (area === \"area_3\"){\n    return [null, null, msg]\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":720,"wires":[["0d99586271547928","d0a97fd11a24f58e","9c6963d6cb56cfa4","712666963835ce25"],["3f339ac742aaa8fa","2251c49d8d0e7ff3","db4841da908bec99","18b06a0e7519425c"],[]]},{"id":"3f339ac742aaa8fa","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get temp air","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_data_air_temp","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":450,"y":600,"wires":[["acd128a01f562640"]]},{"id":"acd128a01f562640","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":600,"wires":[["e0a0016e480e30a2"]]},{"id":"c5df656a2a3eb241","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":660,"wires":[["cf478460632aa9ab"]]},{"id":"e0a0016e480e30a2","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxTempAir = msg.payload.MaxTempAir\nvar targetTempAir = msg.payload.TargetTempAir\nvar minTempAir = msg.payload.MinTempAir\nvar currentTempAir = msg.payload.CurrentTempAir\n\n\nmsg.payload = {\n    \"MaxTempAir\": maxTempAir,\n    \"TargetTempAir\": targetTempAir,\n    \"MinTempAir\": minTempAir,\n    \"CurrentTempAir\": currentTempAir\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":600,"wires":[["4148ba1c2a1c2f6b"]]},{"id":"cf478460632aa9ab","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxHum = msg.payload.MaxHum\nvar targetHum = msg.payload.TargetHum\nvar minHum = msg.payload.MinHum\nvar currentHum = msg.payload.CurrentHum\n\n\nmsg.payload = {\n    \"MaxHum\": maxHum,\n    \"TargetHum\": targetHum,\n    \"MinHum\": minHum,\n    \"CurrentHum\": currentHum\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":660,"wires":[["00251c55fcb91233"]]},{"id":"4148ba1c2a1c2f6b","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"tempAirData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":600,"wires":[["da0e029a55da5506"]]},{"id":"00251c55fcb91233","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"humData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":660,"wires":[["da0e029a55da5506"]]},{"id":"2251c49d8d0e7ff3","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get hum ","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_data_air_hum","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":660,"wires":[["c5df656a2a3eb241"]]},{"id":"db4841da908bec99","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get vpd","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_data_air_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":720,"wires":[["24ee4208c90264f5"]]},{"id":"18b06a0e7519425c","type":"api-current-state","z":"7929e89f8e2ce39c","name":"Get co2","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_data_air_co2","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":440,"y":780,"wires":[["82567bb0ed7dc7b6"]]},{"id":"24ee4208c90264f5","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":720,"wires":[["80bad49cc97351f5"]]},{"id":"82567bb0ed7dc7b6","type":"json","z":"7929e89f8e2ce39c","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":730,"y":780,"wires":[["485c174a86de47f4"]]},{"id":"80bad49cc97351f5","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxVpd = msg.payload.MaxVpd\nvar targetVpd = msg.payload.TargetVpd\nvar minVpd = msg.payload.MinVpd\nvar currentVpd = msg.payload.CurrentVpd\n\n\nmsg.payload = {\n    \"MaxVpd\": maxVpd,\n    \"TargetVpd\": targetVpd,\n    \"MinVpd\": minVpd,\n    \"CurrentVpd\": currentVpd\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":720,"wires":[["7ee6fd02603647df"]]},{"id":"485c174a86de47f4","type":"function","z":"7929e89f8e2ce39c","name":"Format boolean values","func":"var maxCO2 = msg.payload.MaxCO2\nvar targetCO2 = msg.payload.TargetCO2\nvar minCO2 = msg.payload.MinCO2\nvar currentCO2 = msg.payload.CurrentCO2\n\n\nmsg.payload = {\n    \"MaxCO2\": maxCO2,\n    \"TargetCO2\": targetCO2,\n    \"MinCO2\": minCO2,\n    \"CurrentCO2\": currentCO2\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":780,"wires":[["fefcee8cfcc2f397"]]},{"id":"7ee6fd02603647df","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"vpdData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":720,"wires":[["da0e029a55da5506"]]},{"id":"fefcee8cfcc2f397","type":"change","z":"7929e89f8e2ce39c","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"co2Data","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":780,"wires":[["da0e029a55da5506"]]},{"id":"da0e029a55da5506","type":"join","z":"7929e89f8e2ce39c","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1520,"y":700,"wires":[["97107b4db5d65e29"]]},{"id":"97107b4db5d65e29","type":"function","z":"7929e89f8e2ce39c","name":"merge","func":"msg.payload = { ...msg.payload.tempAirData, ...msg.payload.humData, ...msg.payload.vpdData, ...msg.payload.co2Data }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":700,"wires":[[]]},{"id":"b4b2531597d803dd","type":"subflow","name":"[DC] Get Device States","info":"","category":"","in":[{"x":40,"y":720,"wires":[{"id":"25cf48084f8ad781"}]}],"out":[{"x":2220,"y":700,"wires":[{"id":"49317a6d2771ee5e","port":0},{"id":"f33d88cc3d245275","port":0}]}],"env":[],"meta":{"author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"25cf48084f8ad781","type":"function","z":"b4b2531597d803dd","name":"Area Switch","func":"\nreturn msg;","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":720,"wires":[["8e53a03cb185da8d","57f87b57cb70b47f","2af8de5864f3bc7d","56a6855656014186","3d2cfbd2c37f2753","e6888064b1b50dca"],["ad089515da6976c6","e3be16f9ca617f10","16a88e18a06c0d8e","3daaa4ef7d24c48b","82db3e8f62796a21","357f7c3e21918824"],[]]},{"id":"8e53a03cb185da8d","type":"api-current-state","z":"b4b2531597d803dd","name":"Get exhaust state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_exhaust","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":570,"y":100,"wires":[["717de1fe3bb26580"]]},{"id":"57f87b57cb70b47f","type":"api-current-state","z":"b4b2531597d803dd","name":"Get light state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_light","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":560,"y":160,"wires":[["b9b6f3b5c9e8f879"]]},{"id":"2af8de5864f3bc7d","type":"api-current-state","z":"b4b2531597d803dd","name":"Get humidifier state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_humidifier","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":570,"y":220,"wires":[["a15912595e978011"]]},{"id":"56a6855656014186","type":"api-current-state","z":"b4b2531597d803dd","name":"Get dehumidifier state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_dehumidifier","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":580,"y":280,"wires":[["ad58b052a14628af"]]},{"id":"3d2cfbd2c37f2753","type":"api-current-state","z":"b4b2531597d803dd","name":"Get ventilation state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_ventilation","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":580,"y":340,"wires":[["b107f4daae4f7ebe"]]},{"id":"e6888064b1b50dca","type":"api-current-state","z":"b4b2531597d803dd","name":"Get heater state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_device_heater","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":560,"y":400,"wires":[["dddfd496bb9af11b"]]},{"id":"717de1fe3bb26580","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":100,"wires":[["742feee7c2adf36f"]]},{"id":"b9b6f3b5c9e8f879","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":160,"wires":[["17aa877d8f61ecc7"]]},{"id":"a15912595e978011","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":220,"wires":[["b47f28c17cea4e12"]]},{"id":"ad58b052a14628af","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":280,"wires":[["0ec1db2ca4734171"]]},{"id":"b107f4daae4f7ebe","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":340,"wires":[["5fa06e16f9f90a65"]]},{"id":"dddfd496bb9af11b","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":400,"wires":[["03f188a87ac55af7"]]},{"id":"742feee7c2adf36f","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var exhaustPowerState = msg.payload.ExhaustPowerState\nvar exhaustPercentageState = msg.payload.ExhaustPercentageState\nvar isExhaustDimmable = msg.payload.IsExhaustDimmable\nvar exhaustEqualsAC = msg.payload.ExhaustEqualsAC\nvar exhaustEqualsDehumidifier = msg.payload.ExhaustEqualsDehumidifier\nvar exhaustDimmSteps = msg.payload.ExhaustDimmSteps\n\nvar exhaustPowerPercentage\n\nif (exhaustPowerState === \"on\" && isExhaustDimmable === \"off\"){\n    exhaustPowerPercentage = 100;\n} else if (exhaustPowerState === \"off\") {\n    exhaustPowerPercentage  = 0;\n} else {\n    exhaustPowerPercentage = exhaustPercentageState;\n}\n\nif (exhaustPowerState === \"on\") {\n    exhaustPowerState = true;\n} else if (exhaustPowerState === \"off\") {\n    exhaustPowerState = false;\n} else {\n    exhaustPowerState = null;\n}\n\nif (isExhaustDimmable === \"on\") {\n    isExhaustDimmable = true;\n} else if (isExhaustDimmable === \"off\") {\n    isExhaustDimmable = false;\n} else {\n    isExhaustDimmable = null;\n}\n\nif (exhaustEqualsAC === \"on\") {\n    exhaustEqualsAC = true;\n} else if (exhaustEqualsAC === \"off\") {\n    exhaustEqualsAC = false;\n} else {\n    exhaustEqualsAC = null;\n}\n\nif (exhaustEqualsDehumidifier === \"on\") {\n    exhaustEqualsDehumidifier = true;\n} else if (exhaustEqualsDehumidifier === \"off\") {\n    exhaustEqualsDehumidifier = false;\n} else {\n    exhaustEqualsDehumidifier = null;\n}\n\n\nmsg.payload = {\n    \"ExhaustPowerPercentage\": Number(exhaustPowerPercentage),\n    \"ExhaustEqualsAC\": exhaustEqualsAC,\n    \"ExhaustEqualsDehumidifier\": exhaustEqualsDehumidifier,\n    \"ExhaustIsDimmable\": isExhaustDimmable,\n    \"ExhaustDimmSteps\": Number(exhaustDimmSteps),\n    \"ExhaustPowerState\": exhaustPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":100,"wires":[["ac7901683479988e"]]},{"id":"17aa877d8f61ecc7","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var lightPowerState = msg.payload.LightPowerState\nvar lightPercentageState = msg.payload.LightPercentageState\nvar isLightDimmable = msg.payload.IsLightDimmable\nvar lightDimmSteps = msg.payload.LightDimmSteps\n\n\nvar lightPowerPercentage\n\nif (lightPowerState === \"on\" && isLightDimmable === \"off\") {\n    lightPowerPercentage = 100;\n} else if (lightPowerState === \"off\") {\n    lightPowerPercentage = 0;\n} else {\n    lightPowerPercentage = lightPercentageState;\n}\n\nif (isLightDimmable === \"on\") {\n    isLightDimmable = true;\n} else if (isLightDimmable === \"off\") {\n    isLightDimmable = false;\n} else {\n    isLightDimmable = null;\n}\n\nif (lightPowerState === \"on\") {\n    lightPowerState = true;\n} else if (lightPowerState === \"off\") {\n    lightPowerState = false;\n} else {\n    lightPowerState = null;\n}\n\nmsg.payload = {\n    \"LightPowerPercentage\": Number(lightPowerPercentage),\n    \"LightIsDimmable\": isLightDimmable,\n    \"LightDimmSteps\": Number(lightDimmSteps),\n    \"LightPowerState\": lightPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":160,"wires":[["2dad7757bcc73db8"]]},{"id":"b47f28c17cea4e12","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var humidifierPowerState = msg.payload.HumidifierPowerState\nvar humidifierPercentageState = msg.payload.HumidifierPercentageState\nvar isHumidifierDimmable = msg.payload.IsHumidifierDimmable\nvar humidifierDimmSteps = msg.payload.HumidifierDimmSteps\n\n\nvar humidifierPowerPercentage\n\nif (humidifierPowerState === \"on\" && isHumidifierDimmable === \"off\") {\n    humidifierPowerPercentage = 100;\n} else if (humidifierPowerState === \"off\") {\n    humidifierPowerPercentage = 0;\n} else {\n    humidifierPowerPercentage = humidifierPercentageState;\n}\n\nif (isHumidifierDimmable === \"on\") {\n    isHumidifierDimmable = true;\n} else if (isHumidifierDimmable === \"off\") {\n    isHumidifierDimmable = false;\n} else {\n    isHumidifierDimmable = null;\n}\n\nif (humidifierPowerState === \"on\") {\n    humidifierPowerState = true;\n} else if (humidifierPowerState === \"off\") {\n    humidifierPowerState = false;\n} else {\n    humidifierPowerState = null;\n}\n\nmsg.payload = {\n    \"HumidifierPowerPercentage\": Number(humidifierPowerPercentage),\n    \"HumidifierIsDimmable\": isHumidifierDimmable,\n    \"HumidifierDimmSteps\": Number(humidifierDimmSteps),\n    \"HumidifierPowerState\": humidifierPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":220,"wires":[["a60a825def5ab0e0"]]},{"id":"0ec1db2ca4734171","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var dehumidifierPowerState = msg.payload.DehumidifierPowerState\nvar dehumidifierPercentageState = msg.payload.DehumidifierPercentageState\nvar isDehumidifierDimmable = msg.payload.IsDehumidifierDimmable\nvar dehumidifierDimmSteps = msg.payload.DehumidifierDimmSteps\n\nvar dehumidifierPowerPercentage\n\nif (dehumidifierPowerState === \"on\" && isDehumidifierDimmable === \"off\") {\n    dehumidifierPowerPercentage = 100;\n} else if (dehumidifierPowerState === \"off\") {\n    dehumidifierPowerPercentage = 0;\n} else {\n    dehumidifierPowerPercentage = dehumidifierPercentageState;\n}\n\nif (isDehumidifierDimmable === \"on\") {\n    isDehumidifierDimmable = true;\n} else if (isDehumidifierDimmable === \"off\") {\n    isDehumidifierDimmable = false;\n} else {\n    isDehumidifierDimmable = null;\n}\n\nif (dehumidifierPowerState === \"on\") {\n    dehumidifierPowerState = true;\n} else if (dehumidifierPowerState === \"off\") {\n    dehumidifierPowerState = false;\n} else {\n    dehumidifierPowerState = null;\n}\n\nmsg.payload = {\n    \"DehumidifierPowerPercentage\": Number(dehumidifierPowerPercentage),\n    \"DehumidifierIsDimmable\": isDehumidifierDimmable,\n    \"DehumidifierDimmSteps\": Number(dehumidifierDimmSteps),\n    \"DehumidifierPowerState\": dehumidifierPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":280,"wires":[["5f645e0c093dd78b"]]},{"id":"5fa06e16f9f90a65","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var ventilationPowerState = msg.payload.VentilationPowerState\nvar ventilationPercentageState = msg.payload.VentilationPercentageState\nvar isVentilationDimmable = msg.payload.IsVentilationDimmable\nvar ventilationDimmSteps = msg.payload.VentilationDimmSteps\n\nvar ventilationPowerPercentage\n\nif (ventilationPowerState === \"on\" && isVentilationDimmable === \"off\") {\n    ventilationPowerPercentage = 100;\n} else if (ventilationPowerState === \"off\") {\n    ventilationPowerPercentage = 0;\n} else {\n    ventilationPowerPercentage = ventilationPercentageState;\n}\n\nif (isVentilationDimmable === \"on\") {\n    isVentilationDimmable = true;\n} else if (isVentilationDimmable === \"off\") {\n    isVentilationDimmable = false;\n} else {\n    isVentilationDimmable = null;\n}\n\nif (ventilationPowerState === \"on\") {\n    ventilationPowerState = true;\n} else if (ventilationPowerState === \"off\") {\n    ventilationPowerState = false;\n} else {\n    ventilationPowerState = null;\n}\n\nmsg.payload = {\n    \"VentilationPowerPercentage\": Number(ventilationPowerPercentage),\n    \"VentilationIsDimmable\": isVentilationDimmable,\n    \"VentilationDimmSteps\": Number(ventilationDimmSteps),\n    \"VentilationPowerState\": ventilationPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":340,"wires":[["bb6e5a1cba54c755"]]},{"id":"03f188a87ac55af7","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var heaterPowerState = msg.payload.HeaterPowerState\nvar heaterPercentageState = msg.payload.HeaterPercentageState\nvar isHeaterDimmable = msg.payload.IsHeaterDimmable\nvar heaterDimmSteps = msg.payload.HeaterDimmSteps\n\nvar heaterPowerPercentage\n\nif (heaterPowerState === \"on\" && isHeaterDimmable === \"off\") {\n    heaterPowerPercentage = 100;\n} else if (heaterPowerState === \"off\") {\n    heaterPowerPercentage = 0;\n} else {\n    heaterPowerPercentage = heaterPercentageState;\n}\n\nif (isHeaterDimmable === \"on\") {\n    isHeaterDimmable = true;\n} else if (isHeaterDimmable === \"off\") {\n    isHeaterDimmable = false;\n} else {\n    isHeaterDimmable = null;\n}\n\nif (heaterPowerState === \"on\") {\n    heaterPowerState = true;\n} else if (heaterPowerState === \"off\") {\n    heaterPowerState = false;\n} else {\n    heaterPowerState = null;\n}\n\nmsg.payload = {\n    \"HeaterPowerPercentage\": Number(heaterPowerPercentage),\n    \"HeaterIsDimmable\": isHeaterDimmable,\n    \"HeaterDimmSteps\": Number(heaterDimmSteps),\n    \"HeaterPowerState\": heaterPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":400,"wires":[["ccb11efed5e26f17"]]},{"id":"ac7901683479988e","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"exhaustData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":100,"wires":[["f24d7a87364c8519"]]},{"id":"2dad7757bcc73db8","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"lightData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":160,"wires":[["f24d7a87364c8519"]]},{"id":"a60a825def5ab0e0","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"humidifierData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":220,"wires":[["f24d7a87364c8519"]]},{"id":"5f645e0c093dd78b","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"dehumidifierData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":280,"wires":[["f24d7a87364c8519"]]},{"id":"bb6e5a1cba54c755","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"ventilationData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":340,"wires":[["f24d7a87364c8519"]]},{"id":"ccb11efed5e26f17","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"heaterData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":400,"wires":[["f24d7a87364c8519"]]},{"id":"f24d7a87364c8519","type":"join","z":"b4b2531597d803dd","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"6","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1700,"y":240,"wires":[["49317a6d2771ee5e"]]},{"id":"49317a6d2771ee5e","type":"function","z":"b4b2531597d803dd","name":"merge","func":"msg.payload = { ...msg.payload.exhaustData, ...msg.payload.lightData, ...msg.payload.humidifierData, ...msg.payload.dehumidifierData, ...msg.payload.ventilationData, ...msg.payload.heaterData }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1910,"y":240,"wires":[[]]},{"id":"ad089515da6976c6","type":"api-current-state","z":"b4b2531597d803dd","name":"Get exhaust state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_exhaust","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":570,"y":560,"wires":[["703d41960412f1b3"]]},{"id":"e3be16f9ca617f10","type":"api-current-state","z":"b4b2531597d803dd","name":"Get light state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_light","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":560,"y":620,"wires":[["c0dd8e7ecbef0f8b"]]},{"id":"16a88e18a06c0d8e","type":"api-current-state","z":"b4b2531597d803dd","name":"Get humidifier state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_humidifier","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":570,"y":680,"wires":[["fbd84a633fcf2754"]]},{"id":"3daaa4ef7d24c48b","type":"api-current-state","z":"b4b2531597d803dd","name":"Get dehumidifier state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_dehumidifier","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":580,"y":740,"wires":[["e04f1f3d2df1618a"]]},{"id":"82db3e8f62796a21","type":"api-current-state","z":"b4b2531597d803dd","name":"Get ventilation state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_ventilation","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":580,"y":800,"wires":[["bb482ebc08d45917"]]},{"id":"357f7c3e21918824","type":"api-current-state","z":"b4b2531597d803dd","name":"Get heater state","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_device_heater","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":560,"y":860,"wires":[["523f68df292629b7"]]},{"id":"703d41960412f1b3","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":560,"wires":[["ccad86ee44bbd22e"]]},{"id":"c0dd8e7ecbef0f8b","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":620,"wires":[["981f378925a38332"]]},{"id":"fbd84a633fcf2754","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":680,"wires":[["89e4a76aefd18f35"]]},{"id":"e04f1f3d2df1618a","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":740,"wires":[["2023c8b702067354"]]},{"id":"bb482ebc08d45917","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":800,"wires":[["6117ed25e6a6de11"]]},{"id":"523f68df292629b7","type":"json","z":"b4b2531597d803dd","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":830,"y":860,"wires":[["e7ebf2e664ac9417"]]},{"id":"ccad86ee44bbd22e","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var exhaustPowerState = msg.payload.ExhaustPowerState\nvar exhaustPercentageState = msg.payload.ExhaustPercentageState\nvar isExhaustDimmable = msg.payload.IsExhaustDimmable\nvar exhaustEqualsAC = msg.payload.ExhaustEqualsAC\nvar exhaustEqualsDehumidifier = msg.payload.ExhaustEqualsDehumidifier\nvar exhaustDimmSteps = msg.payload.ExhaustDimmSteps\n\nvar exhaustPowerPercentage\n\nif (exhaustPowerState === \"on\" && isExhaustDimmable === \"off\"){\n    exhaustPowerPercentage = 100;\n} else if (exhaustPowerState === \"off\") {\n    exhaustPowerPercentage  = 0;\n} else {\n    exhaustPowerPercentage = exhaustPercentageState;\n}\n\nif (exhaustPowerState === \"on\") {\n    exhaustPowerState = true;\n} else if (exhaustPowerState === \"off\") {\n    exhaustPowerState = false;\n} else {\n    exhaustPowerState = null;\n}\n\nif (isExhaustDimmable === \"on\") {\n    isExhaustDimmable = true;\n} else if (isExhaustDimmable === \"off\") {\n    isExhaustDimmable = false;\n} else {\n    isExhaustDimmable = null;\n}\n\nif (exhaustEqualsAC === \"on\") {\n    exhaustEqualsAC = true;\n} else if (exhaustEqualsAC === \"off\") {\n    exhaustEqualsAC = false;\n} else {\n    exhaustEqualsAC = null;\n}\n\nif (exhaustEqualsDehumidifier === \"on\") {\n    exhaustEqualsDehumidifier = true;\n} else if (exhaustEqualsDehumidifier === \"off\") {\n    exhaustEqualsDehumidifier = false;\n} else {\n    exhaustEqualsDehumidifier = null;\n}\n\n\nmsg.payload = {\n    \"ExhaustPowerPercentage\": Number(exhaustPowerPercentage),\n    \"ExhaustEqualsAC\": exhaustEqualsAC,\n    \"ExhaustEqualsDehumidifier\": exhaustEqualsDehumidifier,\n    \"ExhaustIsDimmable\": isExhaustDimmable,\n    \"ExhaustDimmSteps\": Number(exhaustDimmSteps),\n    \"ExhaustPowerState\": exhaustPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":560,"wires":[["f03971d0f55fa45b"]]},{"id":"981f378925a38332","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var lightPowerState = msg.payload.LightPowerState\nvar lightPercentageState = msg.payload.LightPercentageState\nvar isLightDimmable = msg.payload.IsLightDimmable\nvar lightDimmSteps = msg.payload.LightDimmSteps\n\n\nvar lightPowerPercentage\n\nif (lightPowerState === \"on\" && isLightDimmable === \"off\") {\n    lightPowerPercentage = 100;\n} else if (lightPowerState === \"off\") {\n    lightPowerPercentage = 0;\n} else {\n    lightPowerPercentage = lightPercentageState;\n}\n\nif (isLightDimmable === \"on\") {\n    isLightDimmable = true;\n} else if (isLightDimmable === \"off\") {\n    isLightDimmable = false;\n} else {\n    isLightDimmable = null;\n}\n\nif (lightPowerState === \"on\") {\n    lightPowerState = true;\n} else if (lightPowerState === \"off\") {\n    lightPowerState = false;\n} else {\n    lightPowerState = null;\n}\n\nmsg.payload = {\n    \"LightPowerPercentage\": Number(lightPowerPercentage),\n    \"LightIsDimmable\": isLightDimmable,\n    \"LightDimmSteps\": Number(lightDimmSteps),\n    \"LightPowerState\": lightPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":620,"wires":[["0715192b2fe3f505"]]},{"id":"89e4a76aefd18f35","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var humidifierPowerState = msg.payload.HumidifierPowerState\nvar humidifierPercentageState = msg.payload.HumidifierPercentageState\nvar isHumidifierDimmable = msg.payload.IsHumidifierDimmable\nvar humidifierDimmSteps = msg.payload.HumidifierDimmSteps\n\n\nvar humidifierPowerPercentage\n\nif (humidifierPowerState === \"on\" && isHumidifierDimmable === \"off\") {\n    humidifierPowerPercentage = 100;\n} else if (humidifierPowerState === \"off\") {\n    humidifierPowerPercentage = 0;\n} else {\n    humidifierPowerPercentage = humidifierPercentageState;\n}\n\nif (isHumidifierDimmable === \"on\") {\n    isHumidifierDimmable = true;\n} else if (isHumidifierDimmable === \"off\") {\n    isHumidifierDimmable = false;\n} else {\n    isHumidifierDimmable = null;\n}\n\nif (humidifierPowerState === \"on\") {\n    humidifierPowerState = true;\n} else if (humidifierPowerState === \"off\") {\n    humidifierPowerState = false;\n} else {\n    humidifierPowerState = null;\n}\n\nmsg.payload = {\n    \"HumidifierPowerPercentage\": Number(humidifierPowerPercentage),\n    \"HumidifierIsDimmable\": isHumidifierDimmable,\n    \"HumidifierDimmSteps\": Number(humidifierDimmSteps),\n    \"HumidifierPowerState\": humidifierPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":680,"wires":[["bea8f1f51aacd3f5"]]},{"id":"2023c8b702067354","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var dehumidifierPowerState = msg.payload.DehumidifierPowerState\nvar dehumidifierPercentageState = msg.payload.DehumidifierPercentageState\nvar isDehumidifierDimmable = msg.payload.IsDehumidifierDimmable\nvar dehumidifierDimmSteps = msg.payload.DehumidifierDimmSteps\n\nvar dehumidifierPowerPercentage\n\nif (dehumidifierPowerState === \"on\" && isDehumidifierDimmable === \"off\") {\n    dehumidifierPowerPercentage = 100;\n} else if (dehumidifierPowerState === \"off\") {\n    dehumidifierPowerPercentage = 0;\n} else {\n    dehumidifierPowerPercentage = dehumidifierPercentageState;\n}\n\nif (isDehumidifierDimmable === \"on\") {\n    isDehumidifierDimmable = true;\n} else if (isDehumidifierDimmable === \"off\") {\n    isDehumidifierDimmable = false;\n} else {\n    isDehumidifierDimmable = null;\n}\n\nif (dehumidifierPowerState === \"on\") {\n    dehumidifierPowerState = true;\n} else if (dehumidifierPowerState === \"off\") {\n    dehumidifierPowerState = false;\n} else {\n    dehumidifierPowerState = null;\n}\n\nmsg.payload = {\n    \"DehumidifierPowerPercentage\": Number(dehumidifierPowerPercentage),\n    \"DehumidifierIsDimmable\": isDehumidifierDimmable,\n    \"DehumidifierDimmSteps\": Number(dehumidifierDimmSteps),\n    \"DehumidifierPowerState\": dehumidifierPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":740,"wires":[["c187a5483f6b308a"]]},{"id":"6117ed25e6a6de11","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var ventilationPowerState = msg.payload.VentilationPowerState\nvar ventilationPercentageState = msg.payload.VentilationPercentageState\nvar isVentilationDimmable = msg.payload.IsVentilationDimmable\nvar ventilationDimmSteps = msg.payload.VentilationDimmSteps\n\nvar ventilationPowerPercentage\n\nif (ventilationPowerState === \"on\" && isVentilationDimmable === \"off\") {\n    ventilationPowerPercentage = 100;\n} else if (ventilationPowerState === \"off\") {\n    ventilationPowerPercentage = 0;\n} else {\n    ventilationPowerPercentage = ventilationPercentageState;\n}\n\nif (isVentilationDimmable === \"on\") {\n    isVentilationDimmable = true;\n} else if (isVentilationDimmable === \"off\") {\n    isVentilationDimmable = false;\n} else {\n    isVentilationDimmable = null;\n}\n\nif (ventilationPowerState === \"on\") {\n    ventilationPowerState = true;\n} else if (ventilationPowerState === \"off\") {\n    ventilationPowerState = false;\n} else {\n    ventilationPowerState = null;\n}\n\nmsg.payload = {\n    \"VentilationPowerPercentage\": Number(ventilationPowerPercentage),\n    \"VentilationIsDimmable\": isVentilationDimmable,\n    \"VentilationDimmSteps\": Number(ventilationDimmSteps),\n    \"VentilationPowerState\": ventilationPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":800,"wires":[["359d45b4e4828902"]]},{"id":"e7ebf2e664ac9417","type":"function","z":"b4b2531597d803dd","name":"Format values","func":"var heaterPowerState = msg.payload.HeaterPowerState\nvar heaterPercentageState = msg.payload.HeaterPercentageState\nvar isHeaterDimmable = msg.payload.IsHeaterDimmable\nvar heaterDimmSteps = msg.payload.HeaterDimmSteps\n\nvar heaterPowerPercentage\n\nif (heaterPowerState === \"on\" && isHeaterDimmable === \"off\") {\n    heaterPowerPercentage = 100;\n} else if (heaterPowerState === \"off\") {\n    heaterPowerPercentage = 0;\n} else {\n    heaterPowerPercentage = heaterPercentageState;\n}\n\nif (isHeaterDimmable === \"on\") {\n    isHeaterDimmable = true;\n} else if (isHeaterDimmable === \"off\") {\n    isHeaterDimmable = false;\n} else {\n    isHeaterDimmable = null;\n}\n\nif (heaterPowerState === \"on\") {\n    heaterPowerState = true;\n} else if (heaterPowerState === \"off\") {\n    heaterPowerState = false;\n} else {\n    heaterPowerState = null;\n}\n\nmsg.payload = {\n    \"HeaterPowerPercentage\": Number(heaterPowerPercentage),\n    \"HeaterIsDimmable\": isHeaterDimmable,\n    \"HeaterDimmSteps\": Number(heaterDimmSteps),\n    \"HeaterPowerState\": heaterPowerState\n}\n\n\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":860,"wires":[["7857319816cab7cf"]]},{"id":"f03971d0f55fa45b","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"exhaustData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":560,"wires":[["18bb0c665826f8ba"]]},{"id":"0715192b2fe3f505","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"lightData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":620,"wires":[["18bb0c665826f8ba"]]},{"id":"bea8f1f51aacd3f5","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"humidifierData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":680,"wires":[["18bb0c665826f8ba"]]},{"id":"c187a5483f6b308a","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"dehumidifierData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":740,"wires":[["18bb0c665826f8ba"]]},{"id":"359d45b4e4828902","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"ventilationData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":800,"wires":[["18bb0c665826f8ba"]]},{"id":"7857319816cab7cf","type":"change","z":"b4b2531597d803dd","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"heaterData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":860,"wires":[["18bb0c665826f8ba"]]},{"id":"18bb0c665826f8ba","type":"join","z":"b4b2531597d803dd","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"6","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1700,"y":700,"wires":[["f33d88cc3d245275"]]},{"id":"f33d88cc3d245275","type":"function","z":"b4b2531597d803dd","name":"merge","func":"msg.payload = { ...msg.payload.exhaustData, ...msg.payload.lightData, ...msg.payload.humidifierData, ...msg.payload.dehumidifierData, ...msg.payload.ventilationData, ...msg.payload.heaterData }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1910,"y":700,"wires":[[]]},{"id":"4fa2fd5f290d5aa6","type":"subflow","name":"[AC] Static Mode","info":"","category":"","in":[{"x":60,"y":100,"wires":[]}],"out":[],"env":[],"meta":{"module":"Static Mode","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"6b9ca77e99021ecb","type":"subflow","name":"[DC] Ventilation Control","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"f69b57236b2a90aa"}]}],"out":[],"env":[],"meta":{"module":"Ventilation Control","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"28d3f52d982aa3b8","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212","dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1590,"y":80,"wires":[[]]},{"id":"f69b57236b2a90aa","type":"function","z":"6b9ca77e99021ecb","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":140,"wires":[["3f932cb4523ebb91"]]},{"id":"1de4b573f16eb4ea","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212","dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1590,"y":140,"wires":[[]]},{"id":"514cc0773df61b3f","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212","dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1590,"y":320,"wires":[["dcbc26ab22863df3"]]},{"id":"353b22e19f0aa364","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Turn ventilation off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["a57fe0c99f15a1a1dd8123db07d70212","dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2650,"y":400,"wires":[[]]},{"id":"ec16544407f3bb0c","type":"function","z":"6b9ca77e99021ecb","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2450,"y":400,"wires":[["353b22e19f0aa364"]]},{"id":"216fe6a3dc7f27f4","type":"debug","z":"6b9ca77e99021ecb","name":"Debug Ventilation Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2330,"y":320,"wires":[]},{"id":"dcbc26ab22863df3","type":"change","z":"6b9ca77e99021ecb","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1820,"y":320,"wires":[["7cbe7a7d50800fad"]]},{"id":"82850522f29b19f2","type":"change","z":"6b9ca77e99021ecb","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1820,"y":400,"wires":[["7cbe7a7d50800fad"]]},{"id":"7cbe7a7d50800fad","type":"join","z":"6b9ca77e99021ecb","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2100,"y":400,"wires":[["7a4e06f720bd8835"]]},{"id":"7a4e06f720bd8835","type":"function","z":"6b9ca77e99021ecb","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2290,"y":400,"wires":[["ec16544407f3bb0c"]]},{"id":"a279f16fade6de9a","type":"api-current-state","z":"6b9ca77e99021ecb","name":"Abruf Interval Dauer","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_ventilation_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1600,"y":400,"wires":[["82850522f29b19f2"]]},{"id":"5d6d1498f4c0d1d0","type":"api-call-service","z":"6b9ca77e99021ecb","name":"Set ventilation percentage","server":"#HASSIOIP#","version":5,"debugenabled":false,"domain":"fan","service":"set_percentage","areaId":[],"deviceId":[],"entityId":["fan.aircontrol_grow_ruck_ec"],"data":"{ \"percentage\": msg.payload.DeviceState}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1610,"y":220,"wires":[[]]},{"id":"3f932cb4523ebb91","type":"function","z":"6b9ca77e99021ecb","name":"IsDimmable Switch","func":"var isDimmable = msg.payload.IsDimmable;\n\nif (isDimmable === false) {\n    return [msg, null];\n} else if (isDimmable === true) {\n    return [null, msg];\n} else {\n    return [null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":140,"wires":[["ae1272cfb3300907"],["129ca45d58352983"]]},{"id":"129ca45d58352983","type":"function","z":"6b9ca77e99021ecb","name":"Dimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on and set percentage\n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":240,"wires":[["5d6d1498f4c0d1d0","28d3f52d982aa3b8"],["5d6d1498f4c0d1d0"],["1de4b573f16eb4ea"]]},{"id":"ae1272cfb3300907","type":"function","z":"6b9ca77e99021ecb","name":"nonDimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on \n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":100,"wires":[["28d3f52d982aa3b8"],["514cc0773df61b3f","a279f16fade6de9a"],["1de4b573f16eb4ea"]]},{"id":"54acf8fbb7d3b1d7","type":"subflow","name":"[DC] Humidifier Control","info":"","category":"","in":[{"x":100,"y":220,"wires":[{"id":"5a304b9bb5768c6d"}]}],"out":[],"env":[],"meta":{"module":"Humidifier Control","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"31f9bb08d9deaddd","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1670,"y":60,"wires":[[]]},{"id":"ff442efcf560336f","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1670,"y":160,"wires":[[]]},{"id":"5a304b9bb5768c6d","type":"function","z":"54acf8fbb7d3b1d7","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":220,"wires":[["d50f1077219b98f9","5b66db97f572a5c7"]]},{"id":"7846b24375805f8c","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1670,"y":360,"wires":[["839008cc9f7ad0ce"]]},{"id":"3ceb40a6e10f2fe7","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Turn humidifier off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["17457556ef584da5f32952cf7b6556eb"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2730,"y":440,"wires":[[]]},{"id":"540fc1f750f5f3c8","type":"function","z":"54acf8fbb7d3b1d7","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2530,"y":440,"wires":[["3ceb40a6e10f2fe7"]]},{"id":"484c1309a6a3ce81","type":"debug","z":"54acf8fbb7d3b1d7","name":"Debug Humidifier Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2410,"y":360,"wires":[]},{"id":"839008cc9f7ad0ce","type":"change","z":"54acf8fbb7d3b1d7","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1900,"y":360,"wires":[["10617f3c4af18274"]]},{"id":"c72bd53b476ca034","type":"change","z":"54acf8fbb7d3b1d7","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1900,"y":440,"wires":[["10617f3c4af18274"]]},{"id":"10617f3c4af18274","type":"join","z":"54acf8fbb7d3b1d7","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2180,"y":440,"wires":[["d9ffd1bda62ec812"]]},{"id":"d9ffd1bda62ec812","type":"function","z":"54acf8fbb7d3b1d7","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":440,"wires":[["540fc1f750f5f3c8"]]},{"id":"15514a1c0e75597e","type":"api-current-state","z":"54acf8fbb7d3b1d7","name":"Abruf Interval Dauer","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_humidifier_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1680,"y":440,"wires":[["c72bd53b476ca034"]]},{"id":"1f02e04ff1d7a3cf","type":"api-call-service","z":"54acf8fbb7d3b1d7","name":"Set humidifier percentage","server":"#HASSIOIP#","version":5,"debugenabled":false,"domain":"fan","service":"set_percentage","areaId":[],"deviceId":[],"entityId":["fan.aircontrol_grow_ruck_ec"],"data":"{ \"percentage\": msg.payload.DeviceState}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1690,"y":240,"wires":[[]]},{"id":"d50f1077219b98f9","type":"function","z":"54acf8fbb7d3b1d7","name":"IsDimmable Switch","func":"var isDimmable = msg.payload.IsDimmable;\n\nif (isDimmable === false) {\n    return [msg, null];\n} else if (isDimmable === true) {\n    return [null, msg];\n} else {\n    return [null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":220,"wires":[["e802bcfd13cc73f9"],["367f89a0cc792dec"]]},{"id":"367f89a0cc792dec","type":"function","z":"54acf8fbb7d3b1d7","name":"Dimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on and set percentage\n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":240,"wires":[["1f02e04ff1d7a3cf","31f9bb08d9deaddd"],["1f02e04ff1d7a3cf"],["ff442efcf560336f"]]},{"id":"e802bcfd13cc73f9","type":"function","z":"54acf8fbb7d3b1d7","name":"nonDimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState == false && deviceState != \"none\") {\n    // turn on \n    return [msg, null, null];\n} else if (powerState == true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState == true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":140,"wires":[["31f9bb08d9deaddd"],["7846b24375805f8c","15514a1c0e75597e"],["ff442efcf560336f"]]},{"id":"5b66db97f572a5c7","type":"debug","z":"54acf8fbb7d3b1d7","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":300,"wires":[]},{"id":"74881f2bcec47597","type":"subflow","name":"[DC] Dehumidifier Control","info":"","category":"","in":[{"x":80,"y":220,"wires":[{"id":"f84eb56c1cc6746a"}]}],"out":[],"env":[],"meta":{"module":"Dehumidifier Control","author":"GanjOS Grow Automation","license":"MIT"},"color":"#3FADB5"},{"id":"59d7bd61cf1d8f39","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1560,"y":60,"wires":[[]]},{"id":"f35188aa6fe011f6","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1560,"y":160,"wires":[[]]},{"id":"04527c39c1600513","type":"debug","z":"74881f2bcec47597","name":"Debug Dehumidifier Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":560,"y":420,"wires":[]},{"id":"f84eb56c1cc6746a","type":"function","z":"74881f2bcec47597","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":220,"wires":[["c6e09aaf95b77507"],[],[]]},{"id":"52e40a21ef6ed7c6","type":"api-call-service","z":"74881f2bcec47597","name":"Turn dehumidifier on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1960,"y":220,"wires":[["c80e86059367d65b"]]},{"id":"2d74da9a2bab0aab","type":"api-call-service","z":"74881f2bcec47597","name":"Turn exhaust off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["1d5dda50e23fafb7fe46ae19744bf389"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":3040,"y":300,"wires":[[]]},{"id":"0da6fd817fa883e9","type":"function","z":"74881f2bcec47597","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2850,"y":300,"wires":[["2d74da9a2bab0aab"]]},{"id":"c80e86059367d65b","type":"change","z":"74881f2bcec47597","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":2220,"y":220,"wires":[["132327314b219ec7"]]},{"id":"df861fb8628fbf26","type":"change","z":"74881f2bcec47597","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":2220,"y":300,"wires":[["132327314b219ec7"]]},{"id":"132327314b219ec7","type":"join","z":"74881f2bcec47597","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2500,"y":300,"wires":[["aa4ae5254966dfe5"]]},{"id":"aa4ae5254966dfe5","type":"function","z":"74881f2bcec47597","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2690,"y":300,"wires":[["0da6fd817fa883e9"]]},{"id":"37506d52e679f6f8","type":"api-current-state","z":"74881f2bcec47597","name":"Abruf Interval Dauer","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_dehumidifier_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1960,"y":300,"wires":[["df861fb8628fbf26"]]},{"id":"58aa8315caa18684","type":"api-call-service","z":"74881f2bcec47597","name":"Set exhaust percentage","server":"#HASSIOIP#","version":5,"debugenabled":false,"domain":"fan","service":"set_percentage","areaId":[],"deviceId":[],"entityId":["fan.aircontrol_grow_ruck_ec"],"data":"{ \"percentage\": msg.payload.DeviceState}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1570,"y":280,"wires":[[]]},{"id":"c6e09aaf95b77507","type":"function","z":"74881f2bcec47597","name":"IsDimmable Switch","func":"var isDimmable = msg.payload.IsDimmable;\n\nif (isDimmable === false) {\n    return [msg, null];\n} else if (isDimmable === true) {\n    return [null, msg];\n} else {\n    return [null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":160,"wires":[["38de864adcb32d0b"],["eb150c5c88ad23c2"]]},{"id":"eb150c5c88ad23c2","type":"function","z":"74881f2bcec47597","name":"Dimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on and set percentage\n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":260,"wires":[["58aa8315caa18684","59d7bd61cf1d8f39"],["58aa8315caa18684"],["f35188aa6fe011f6"]]},{"id":"38de864adcb32d0b","type":"function","z":"74881f2bcec47597","name":"nonDimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on \n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":120,"wires":[["59d7bd61cf1d8f39"],["52e40a21ef6ed7c6","37506d52e679f6f8"],["f35188aa6fe011f6"]]},{"id":"212fab6742856947","type":"subflow","name":"[DC] Exhaust Control","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"c6925c186cecf2d8"}]}],"out":[],"env":[],"meta":{"author":"GanjOS Grow Automation"},"color":"#DDAA99"},{"id":"6139687e62dfadfb","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1460,"y":80,"wires":[[]]},{"id":"c6925c186cecf2d8","type":"function","z":"212fab6742856947","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":140,"wires":[["c56d7f803e4f3952"]]},{"id":"9206a2e6ab35134f","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1460,"y":260,"wires":[[]]},{"id":"479da26fb88ec330","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1840,"y":120,"wires":[["33e0f66adbe3969e"]]},{"id":"aebeb59e3412808d","type":"api-call-service","z":"212fab6742856947","name":"Turn exhaust off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["425a60723d54e388b1373e7e4037eac7"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2900,"y":200,"wires":[[]]},{"id":"c7f742f93b30aa02","type":"function","z":"212fab6742856947","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2710,"y":200,"wires":[["aebeb59e3412808d"]]},{"id":"1df159ca1edfa02e","type":"debug","z":"212fab6742856947","name":"Debug Exhaust Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2590,"y":120,"wires":[]},{"id":"33e0f66adbe3969e","type":"change","z":"212fab6742856947","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":2080,"y":120,"wires":[["e1fddc56eb4d3655","1df159ca1edfa02e"]]},{"id":"5ff70cb7345aa161","type":"change","z":"212fab6742856947","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":2080,"y":200,"wires":[["e1fddc56eb4d3655"]]},{"id":"e1fddc56eb4d3655","type":"join","z":"212fab6742856947","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2360,"y":200,"wires":[["7b19dfef03a82750"]]},{"id":"7b19dfef03a82750","type":"function","z":"212fab6742856947","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2550,"y":200,"wires":[["c7f742f93b30aa02"]]},{"id":"959e2d1fca0fac5d","type":"api-current-state","z":"212fab6742856947","name":"Abruf Interval Dauer","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_exhaust_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1860,"y":200,"wires":[["5ff70cb7345aa161"]]},{"id":"620f66eeb03e4366","type":"comment","z":"212fab6742856947","name":"Abruf könnte auch schon in dem JSON erfolgen","info":"","x":1940,"y":60,"wires":[]},{"id":"af9e0e743a533377","type":"api-call-service","z":"212fab6742856947","name":"Set exhaust percentage","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"fan","service":"set_percentage","areaId":[],"deviceId":[],"entityId":["fan.aircontrol_grow_ruck_ec"],"data":"{ \"percentage\": msg.payload.DeviceState}","dataType":"jsonata","mergeContext":"","mustacheAltTags":true,"outputProperties":[],"queue":"none","x":1490,"y":200,"wires":[[]]},{"id":"c56d7f803e4f3952","type":"function","z":"212fab6742856947","name":"IsDimmable Switch","func":"var isDimmable = msg.payload.IsDimmable;\n\nif (isDimmable === false) {\n    return [msg, null];\n} else if (isDimmable === true) {\n    return [null, msg];\n} else {\n    return [null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":140,"wires":[["df57c08e7d480457"],["c234a5151e5318ad"]]},{"id":"c234a5151e5318ad","type":"function","z":"212fab6742856947","name":"Dimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on and set percentage\n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (deviceState === \"none\") {\n    // nothing\n    return [null, null, null];\n}else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":240,"wires":[["af9e0e743a533377","6139687e62dfadfb"],["af9e0e743a533377"],["9206a2e6ab35134f"]]},{"id":"df57c08e7d480457","type":"function","z":"212fab6742856947","name":"nonDimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on \n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":100,"wires":[["6139687e62dfadfb"],["479da26fb88ec330","959e2d1fca0fac5d"],["9206a2e6ab35134f"]]},{"id":"0dd1d006a8b8f409","type":"subflow","name":"[DC] AC Control","info":"","category":"","in":[{"x":80,"y":140,"wires":[{"id":"9afc0850d308ec1d"}]}],"out":[],"env":[],"meta":{"author":"GanjOS Grow Automation"},"color":"#DDAA99"},{"id":"9afc0850d308ec1d","type":"debug","z":"0dd1d006a8b8f409","name":"Debug AC Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":370,"y":260,"wires":[]},{"id":"6a2ce38a59833948","type":"subflow","name":"[DC] Heater Control","info":"","category":"","in":[{"x":80,"y":280,"wires":[{"id":"8b774828d11801b5"}]}],"out":[],"env":[],"meta":{"module":"Heater Control","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"83e97a2adaacc112","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1680,"y":160,"wires":[[]]},{"id":"f74dbf567eb9de1a","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":["dfc75ded4ebb55bae4e765847ca2d9cd"],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1680,"y":220,"wires":[[]]},{"id":"0c6f64eb211ff1da","type":"debug","z":"6a2ce38a59833948","name":"Debug Heater Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":560,"y":840,"wires":[]},{"id":"8b774828d11801b5","type":"function","z":"6a2ce38a59833948","name":"Area Switch","func":"var area = msg.payload.Area;\n\nif (area === \"area_1\") {\n    return [msg, null, null];\n} else if (area === \"area_2\") {\n    return [null, msg, null];\n} else if (area === \"area_3\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":280,"wires":[["16707137ac591a66"]]},{"id":"7b4cbd5d4ee17078","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater on","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1680,"y":360,"wires":[["cfe4d1789a3799b8"]]},{"id":"b7ec6e6ac672a459","type":"api-call-service","z":"6a2ce38a59833948","name":"Turn heater off","server":"#HASSIOIP#","version":5,"debugenabled":true,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2740,"y":440,"wires":[[]]},{"id":"b58647d95d4433b0","type":"function","z":"6a2ce38a59833948","name":"delay","func":"var intervalDuration = msg.payload.IntervalDuration * 1000;\n\nsetTimeout(() => {return msg;}, intervalDuration);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2550,"y":440,"wires":[["b7ec6e6ac672a459"]]},{"id":"527e0560da915e2e","type":"debug","z":"6a2ce38a59833948","name":"Debug Heater Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2420,"y":360,"wires":[]},{"id":"cfe4d1789a3799b8","type":"change","z":"6a2ce38a59833948","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"incomingTask","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1920,"y":360,"wires":[["6b0a6ad05cd842ac","527e0560da915e2e"]]},{"id":"5918513b4859ca13","type":"change","z":"6a2ce38a59833948","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"intervalDuration","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1920,"y":440,"wires":[["6b0a6ad05cd842ac"]]},{"id":"6b0a6ad05cd842ac","type":"join","z":"6a2ce38a59833948","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2200,"y":440,"wires":[["7ea8d7f71456a401"]]},{"id":"7ea8d7f71456a401","type":"function","z":"6a2ce38a59833948","name":"merge","func":"msg.payload = {...msg.payload.incomingTask, ...msg.payload.intervalDuration}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2390,"y":440,"wires":[["b58647d95d4433b0"]]},{"id":"c3b433879f9b7249","type":"api-current-state","z":"6a2ce38a59833948","name":"Abruf Interval Dauer","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_number.area_1_automation_heater_interval_duration","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1660,"y":440,"wires":[["5918513b4859ca13"]]},{"id":"dc172cf34a35df8f","type":"api-call-service","z":"6a2ce38a59833948","name":"Set heater percentage","server":"#HASSIOIP#","version":5,"debugenabled":false,"domain":"fan","service":"set_percentage","areaId":[],"deviceId":[],"entityId":["fan.aircontrol_grow_ruck_ec"],"data":"{ \"percentage\": msg.payload.DeviceState}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1700,"y":280,"wires":[[]]},{"id":"16707137ac591a66","type":"function","z":"6a2ce38a59833948","name":"IsDimmable Switch","func":"var isDimmable = msg.payload.IsDimmable;\n\nif (isDimmable === false) {\n    return [msg, null];\n} else if (isDimmable === true) {\n    return [null, msg];\n} else {\n    return [null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":280,"wires":[["de7336e279e62a24"],["7ff6c9d38661559e"]]},{"id":"7ff6c9d38661559e","type":"function","z":"6a2ce38a59833948","name":"Dimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on and set percentage\n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":380,"wires":[["dc172cf34a35df8f","83e97a2adaacc112"],["dc172cf34a35df8f"],["f74dbf567eb9de1a"]]},{"id":"de7336e279e62a24","type":"function","z":"6a2ce38a59833948","name":"nonDimmable Device Control","func":"var powerState = msg.payload.PowerState;\nvar deviceState = msg.payload.DeviceState;\n\nif (powerState === false && deviceState != \"none\") {\n    // turn on \n    return [msg, null, null];\n} else if (powerState === true && deviceState != \"none\") {\n    // set percentage\n    return [null, msg, null];\n} else if (powerState === true && deviceState === 0) {\n    // turn off\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":240,"wires":[["83e97a2adaacc112"],["7b4cbd5d4ee17078","c3b433879f9b7249"],["f74dbf567eb9de1a"]]},{"id":"954c251ffd79aa2f","type":"subflow","name":"[DC] Device Main Control","info":"","category":"","in":[{"x":60,"y":180,"wires":[{"id":"15c5108355edd135"}]}],"out":[],"env":[],"meta":{"author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"d6b0b3f2a0779de2","type":"subflow:6a2ce38a59833948","z":"954c251ffd79aa2f","name":"","x":850,"y":400,"wires":[]},{"id":"317a8924b4400b6a","type":"subflow:0dd1d006a8b8f409","z":"954c251ffd79aa2f","name":"","x":840,"y":480,"wires":[]},{"id":"2b144abf3ca09cce","type":"subflow:212fab6742856947","z":"954c251ffd79aa2f","name":"","x":860,"y":80,"wires":[]},{"id":"4a7f25188c367f20","type":"subflow:74881f2bcec47597","z":"954c251ffd79aa2f","name":"","x":870,"y":320,"wires":[]},{"id":"cabaf1d9a85ebecb","type":"subflow:54acf8fbb7d3b1d7","z":"954c251ffd79aa2f","name":"","x":870,"y":240,"wires":[]},{"id":"4c9f244aee94391e","type":"subflow:6b9ca77e99021ecb","z":"954c251ffd79aa2f","name":"","x":870,"y":160,"wires":[]},{"id":"15c5108355edd135","type":"function","z":"954c251ffd79aa2f","name":"split tasks for devices","func":"var area = msg.payload.Area; \nvar msgExhaustTask = {};\nvar msgVentilationTask = {};\nvar msgHumidifierTask = {};\nvar msgDehumidifierTask = {};\nvar msgHeaterTask = {};\nvar msgLightTask = {};\n\nmsgExhaustTask.topic = \"exhaustTask\";\nmsgVentilationTask.topic = \"ventilationTask\";\nmsgHumidifierTask.topic = \"humidifierTask\";\nmsgDehumidifierTask.topic = \"dehumidifierTask\";\nmsgHeaterTask.topic = \"heaterTask\";\nmsgLightTask.topic = \"lightTask\";\n\n\nmsgExhaustTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.ExhaustTask,\n    \"IsDimmable\": msg.payload.ExhaustIsDimmable,\n    \"LastDeviceState\": msg.payload.ExhaustLastState,\n    \"PowerState\": msg.payload.ExhaustPowerState\n};\nmsgVentilationTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.VentilationTask,\n    \"IsDimmable\": msg.payload.VentilationIsDimmable,\n    \"LastDeviceState\": msg.payload.VentilationLastState,\n    \"PowerState\": msg.payload.VentilationPowerState\n};\nmsgHumidifierTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.HumidifierTask,\n    \"IsDimmable\": msg.payload.HumidifierIsDimmable,\n    \"LastDeviceState\": msg.payload.HumidifierLastState,\n    \"PowerState\": msg.payload.HumidifierPowerState\n};\nmsgDehumidifierTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.DehumidifierTask,\n    \"IsDimmable\": msg.payload.DehumidifierIsDimmable,\n    \"LastDeviceState\": msg.payload.DehumidifierLastState,\n    \"PowerState\": msg.payload.DehumidifierPowerState\n};\nmsgHeaterTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.HeaterTask,\n    \"IsDimmable\": msg.payload.HeaterIsDimmable,\n    \"LastDeviceState\": msg.payload.HeaterLastState,\n    \"PowerState\": msg.payload.HeaterPowerState\n};\nmsgLightTask.payload = {\n    \"Area\": area,\n    \"DeviceState\": msg.payload.LightTask,\n    \"IsDimmable\": msg.payload.LightIsDimmable,\n    \"LastDeviceState\": msg.payload.LightLastState,\n    \"PowerState\": msg.payload.LightPowerState\n};\n\nreturn [msgExhaustTask, msgVentilationTask, msgHumidifierTask, msgDehumidifierTask, msgHeaterTask, msgLightTask]; \n","outputs":6,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":180,"wires":[["2b144abf3ca09cce"],["4c9f244aee94391e"],["cabaf1d9a85ebecb"],["4a7f25188c367f20"],["d6b0b3f2a0779de2"],[]]},{"id":"10a83d488a0a131c","type":"subflow","name":"[AC] VPD Mode","info":"","category":"","in":[{"x":40,"y":160,"wires":[{"id":"102c78e301ee1951"},{"id":"4abedff48d1ba25d"}]}],"out":[],"env":[],"meta":{"module":"VPD Mode","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"102c78e301ee1951","type":"function","z":"10a83d488a0a131c","name":"Get AirControl States","func":"// environment values\nvar area = msg.payload.Area;\nvar airControlPrio = msg.payload.AirControlPrio;\nvar vpdState = msg.payload.VpdState;\nvar tempAirState = msg.payload.TempAirState;\nvar humState = msg.payload.HumState;\n// dimmable values\nvar exhaustIsDimmable = msg.payload.ExhaustIsDimmable;\nvar heaterIsDimmable = msg.payload.HeaterIsDimmable;\nvar ventilationIsDimmable = msg.payload.VentilationIsDimmable;\nvar humidifierIsDimmable = msg.payload.HumidifierIsDimmable;\nvar dehumidifierIsDimmable = msg.payload.DehumidifierIsDimmable;\nvar lightIsDimmable = msg.payload.LightIsDimmable;\n// dimm steps \nvar exhaustDimmSteps = msg.payload.ExhaustDimmSteps\nvar heaterDimmSteps = msg.payload.ExhaustDimmSteps\nvar ventilationDimmSteps = msg.payload.ExhaustDimmSteps\nvar lightDimmSteps = msg.payload.LightDimmSteps\nvar humidifierDimmSteps = msg.payload.HumidifierDimmSteps\nvar dehumidifierDimmSteps = msg.payload.DehumidifierDimmSteps\n// device states\nvar lastExhaustState = msg.payload.ExhaustPowerPercentage;\nvar lastHeaterState = msg.payload.HeaterPowerPercentage;\nvar lastHumidifierState = msg.payload.HumidifierPowerPercentage;\nvar lastDehumidifierState = msg.payload.DehumidifierPowerPercentage;\nvar lastVentilationState = msg.payload.VentilationPowerPercentage;\nvar lastLightState = msg.payload.LightPowerPercentage;\n//Multi Use Devices\nvar exhaustEqualsAC = msg.payload.ExhaustEqualsAC;\nvar exhaustEqualsDehumidifier = msg.payload.ExhaustEqualsDehumidifier;\n// tasks\nvar exhaustTask;\nvar heaterTask;\nvar ventilationTask;\nvar humidifierTask;\nvar dehumidifierTask;\nvar lightTask = \"none\"; //TODO: if temp is to high dimm light down or if to low dimm up until max amount for this stage\n\nvar exhaustPowerState = msg.payload.ExhaustPowerState\nvar heaterPowerState = msg.payload.ExhaustPowerState\nvar ventilationPowerState = msg.payload.ExhaustPowerState\nvar lightPowerState = msg.payload.LightPowerState\nvar humidifierPowerState = msg.payload.HumidifierPowerState\nvar dehumidifierPowerState = msg.payload.DehumidifierPowerState\n\n// insert dimmUp and Duimmdown for all devices\n// insert expressions for check if it is below min or above max for this stage \nvar exhaustDimmUp = lastExhaustState + exhaustDimmSteps;\nvar exhaustDimmDown = lastExhaustState - exhaustDimmSteps;\nvar heaterDimmUp = lastHeaterState + heaterDimmSteps;\nvar heaterDimmDown = lastHeaterState - heaterDimmSteps;\nvar ventilationDimmUp = lastVentilationState + ventilationDimmSteps;\nvar ventilationDimmDown = lastVentilationState - ventilationDimmSteps;\nvar humidifierDimmUp = lastHumidifierState + humidifierDimmSteps;\nvar humidifierDimmDown = lastHumidifierState - humidifierDimmSteps;\nvar dehumidifierDimmUp = lastDehumidifierState + dehumidifierDimmSteps;\nvar dehumidifierDimmDown = lastDehumidifierState - dehumidifierDimmSteps;\nvar lightDimmUp = lastLightState + lightDimmSteps;\nvar lightDimmDown = lastLightState - lightDimmSteps;\n\nif (airControlPrio === \"Temperature\") {\n    // if prio is on temp we adjust the temp directly and the hum regarding the VPD\n    // Tasks are adjust Temp; Hum trough VPD; Ventilation\n    // exhaust & heater\n    if (lastLightState != 0) {\n        if (tempAirState === \"high\") {\n            if (lastExhaustState != 100 && lastExhaustState != 0) {\n                exhaustTask = exhaustDimmUp;\n            } else {\n                exhaustTask = 100;\n            }\n            heaterTask = 0;\n        } else if (tempAirState === \"medium-high\") {\n            //TODO adjust this statement\n            if (exhaustIsDimmable === true && lastExhaustState >= 0) {\n                exhaustTask = exhaustDimmDown;\n            } else if (exhaustIsDimmable === true) {\n                exhaustTask = exhaustDimmUp;\n            } else if (exhaustIsDimmable === false) {\n                exhaustTask = 50;\n            } else {\n                exhaustTask = \"failure medium-high\";\n            }\n            heaterTask = 0;\n        } else if (tempAirState === \"perfect\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else if (tempAirState === \"medium-low\") {\n            ////TODO adjust this statement\n            exhaustTask = 0;\n            if (heaterIsDimmable === true && lastHeaterState >= 0) {\n                heaterTask = heaterDimmDown;\n            } else if (heaterIsDimmable === true) {\n                heaterTask = heaterDimmUp;\n            } else if (heaterIsDimmable === false) {\n                heaterTask = 50;\n            } else {\n                heaterTask = \"failure medium-low\";\n            }\n        } else if (tempAirState === \"low\") {\n            exhaustTask = 0;\n            if (lastHeaterState != 100 && lastHeaterState != 0) {\n                heaterTask = heaterDimmUp;\n            } else {\n                heaterTask = 100;\n            }\n        } else {\n            exhaustTask = \"failure\";\n            heaterTask = \"failure\";\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n            if (lastHumidifierState != 100 && lastHumidifierState != 0) {\n                humidifierTask = humidifierDimmUp;\n            } else {\n                humidifierTask = 100;\n            } \n            dehumidifierTask = 0;\n        } else if (vpdState === \"medium-high\") {\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                humidifierTask = humidifierDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                humidifierTask = humidifierDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                humidifierTask = 50;\n            } else {\n                humidifierTask = \"failure medium-high\";\n            }\n            dehumidifierTask = 0;\n        } else if (vpdState === \"perfect\") {\n            humidifierTask = 0;\n            dehumidifierTask = 0;\n        } else if (vpdState === \"medium-low\") {\n            humidifierTask = 0;\n            if (\n                dehumidifierIsDimmable === true &&\n                lastDehumidifierState >= 0\n            ) {\n                dehumidifierTask = dehumidifierDimmDown;\n            } else if (dehumidifierIsDimmable === true) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else if (dehumidifierIsDimmable === false) {\n                dehumidifierTask = 0;\n            } else {\n                dehumidifierTask = \"failure medium-low\";\n            }\n        } else if (vpdState === \"low\") {\n            humidifierTask = 0;\n            if (lastDehumidifierState != 100) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else {\n                dehumidifierTask = 100;\n            }\n        } else {\n            humidifierTask = \"failure\"; //maybe here off\n            dehumidifierTask = \"failure\"; //maybe here off\n        }\n    } else {\n        // if light is off\n        if (tempAirState === \"high\") {\n            if (lastExhaustState != 100 && lastExhaustState != 0) {\n                exhaustTask = exhaustDimmUp;\n            } else {\n                exhaustTask = 100;\n            }\n            heaterTask = 0;\n        } else if (tempAirState === \"medium-high\") {\n            //TODO adjust this statement\n            if (exhaustIsDimmable === true && lastExhaustState >= 0) {\n                exhaustTask = exhaustDimmDown;\n            } else if (exhaustIsDimmable === true) {\n                exhaustTask = exhaustDimmUp;\n            } else if (exhaustIsDimmable === false) {\n                exhaustTask = 0; // maybe set to 50 if the exhaust has to be on\n            } else {\n                exhaustTask = 0;\n            }\n            heaterTask = 0;\n        } else if (tempAirState === \"perfect\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else if (tempAirState === \"medium-low\") {\n            ////TODO adjust this statement\n            exhaustTask = 0;\n            if (heaterIsDimmable === true && lastHeaterState >= 0) {\n                heaterTask = heaterDimmDown;\n            } else if (heaterIsDimmable === true) {\n                heaterTask = heaterDimmUp;\n            } else if (heaterIsDimmable === false) {\n                heaterTask = 0;\n            } else {\n                heaterTask = 0;\n            }\n        } else if (tempAirState === \"low\") {\n            exhaustTask = 0;\n            if (lastHeaterState != 100) {\n                heaterTask = heaterDimmUp;\n            } else if (lastHeaterState === 0) {\n                heaterTask = 50; //maybe set to 100 if the heater has to be on\n            }\n        } else {\n            exhaustTask = 0;\n            heaterTask = 0;\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n            humidifierTask = 0;\n            // plants will adjust it on their own else it could be fullpower or intervalpower\n            dehumidifierTask = 0;\n        } else if (vpdState === \"medium-high\") {\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                humidifierTask = humidifierDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                // add evaluation of light state\n                humidifierTask = humidifierDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                // at night plants will do it on their own\n                humidifierTask = 0;\n            } else {\n                humidifierTask = \"failure\";\n            }\n            // prereact to the humidity of the plants\n            dehumidifierTask = 0;\n        } else if (vpdState === \"perfect\") {\n            humidifierTask = 0;\n            // prereact of the high humidity from plants\n            dehumidifierTask = 0;\n        } else if (vpdState === \"medium-low\") {\n            humidifierTask = 0;\n            if (\n                dehumidifierIsDimmable === true &&\n                lastDehumidifierState >= 0\n            ) {\n                dehumidifierTask = dehumidifierDimmDown;\n            } else if (dehumidifierIsDimmable === true) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else if (dehumidifierIsDimmable === false) {\n                dehumidifierTask = 100; // maybe set to 50 if the dehumidifier has to be on \n            } else {\n                dehumidifierTask = \"failure\";\n            }\n        } else if (vpdState === \"low\") {\n            humidifierTask = 0;\n            if (lastDehumidifierState != 100 && lastDehumidifierState != 0) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else {\n                dehumidifierTask = 100;\n            } \n        } else {\n            humidifierTask = \"failure\";\n            dehumidifierTask = \"failure\";\n        }\n    }\n\n    // Prio is on Humidity ----- Is this needed????\n    /* adjust here ---------------------------------------------------\n     */\n} else if (airControlPrio === \"Humidity\") {\n    // if prio is on hum we adjust the hum directly and the temp regarding the VPD\n    if (lastLightState != 0) {\n        if (humState === \"high\") {\n            if (lastDehumidifierState != 100 && lastDehumidifierState != 0) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else {\n                dehumidifierTask = 100;\n            }\n            humidifierTask = 0;\n        } else if (humState === \"medium-high\") {\n            //TODO adjust this statement\n            if (\n                dehumidifierIsDimmable === true &&\n                lastDehumidifierState >= 0\n            ) {\n                dehumidifierTask = dehumidifierDimmDown;\n            } else if (dehumidifierIsDimmable === true) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else if (dehumidifierIsDimmable === false) {\n                dehumidifierTask = 50;\n            } else {\n                dehumidifierTask = \"failure medium-high\";\n            }\n            humidifierTask = 0;\n        } else if (humState === \"perfect\") {\n            dehumidifierTask = 0;\n            humidifierTask = 0;\n        } else if (humState === \"medium-low\") {\n            ////TODO adjust this statement\n            dehumidifierTask = 0;\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                humidifierTask = humidifierDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                humidifierTask = humidifierDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                humidifierTask = 50;\n            } else {\n                humidifierTask = \"failure medium-low\";\n            }\n        } else if (humState === \"low\") {\n            dehumidifierTask = 0;\n            if (lastHumidifierState != 100 && lastHumidifierState != 0) {\n                humidifierTask = humidifierDimmUp;\n            } else {\n                humidifierTask = 100;\n            } \n        } else {\n            dehumidifierTask = \"failure\";\n            humidifierTask = \"failure\";\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n            if (lastExhaustState != 100 && lastExhaustState != 0) {\n                exhaustTask = exhaustDimmUp;\n            } else {\n                exhaustTask = 100;\n            } \n            heaterTask = 0;\n        } else if (vpdState === \"medium-high\") {\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                exhaustTask = exhaustDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                exhaustTask = exhaustDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                exhaustTask = 50;\n            } else {\n                exhaustTask = \"failure medium-high\";\n            }\n            heaterTask = 0;\n        } else if (vpdState === \"perfect\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else if (vpdState === \"medium-low\") {\n            exhaustTask = 0;\n            if (heaterIsDimmable === true && lastHeaterState >= 0) {\n                heaterTask = heaterDimmDown;\n            } else if (heaterIsDimmable === true) {\n                heaterTask = heaterDimmUp;\n            } else if (heaterIsDimmable === false) {\n                heaterTask = 0;\n            } else {\n                heaterTask = \"failure medium-low\";\n            }\n        } else if (vpdState === \"low\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else {\n            exhaustTask = \"failure\"; //maybe here off\n            heaterTask = \"failure\"; //maybe here off\n        }\n    } else {\n        // if light is off\n        if (humState === \"high\") {\n            if (lastDehumidifierState != 100 && lastDehumidifierState != 0) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else {\n                dehumidifierTask = 100;\n            } \n            humidifierTask = 0;\n        } else if (humState === \"medium-high\") {\n            //TODO adjust this statement\n            if (\n                dehumidifierIsDimmable === true &&\n                lastDehumidifierState >= 0\n            ) {\n                dehumidifierTask = dehumidifierDimmDown;\n            } else if (dehumidifierIsDimmable === true) {\n                dehumidifierTask = dehumidifierDimmUp;\n            } else if (dehumidifierIsDimmable === false) {\n                dehumidifierTask = 50;\n            } else {\n                dehumidifierTask = \"failure medium-high\";\n            }\n            humidifierTask = 0;\n        } else if (humState === \"perfect\") {\n            dehumidifierTask = 0;\n            humidifierTask = 0;\n        } else if (humState === \"medium-low\") {\n            ////TODO adjust this statement\n            dehumidifierTask = 0;\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                humidifierTask = humidifierDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                humidifierTask = humidifierDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                humidifierTask = 0;\n            } else {\n                humidifierTask = \"failure medium-low\";\n            }\n        } else if (humState === \"low\") {\n            dehumidifierTask = 0;\n            humidifierTask = 0;\n        } else {\n            dehumidifierTask = \"failure\";\n            humidifierTask = \"failure\";\n        }\n\n        // humidifier & dehumidifier task\n        if (vpdState === \"high\") {\n            if (lastExhaustState != 100 && lastExhaustState != 0) {\n                exhaustTask = exhaustDimmUp;\n            } else {\n                exhaustTask = 100;\n            } \n            heaterTask = 0;\n        } else if (vpdState === \"medium-high\") {\n            if (\n                humidifierIsDimmable === true &&\n                lastHumidifierState >= 0\n            ) {\n                exhaustTask = exhaustDimmDown;\n            } else if (humidifierIsDimmable === true) {\n                exhaustTask = exhaustDimmUp;\n            } else if (humidifierIsDimmable === false) {\n                exhaustTask = 50;\n            } else {\n                exhaustTask = \"failure medium-high\";\n            }\n            heaterTask = 0;\n        } else if (vpdState === \"perfect\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else if (vpdState === \"medium-low\") {\n            exhaustTask = 0;\n            if (heaterIsDimmable === true && lastHeaterState >= 0) {\n                heaterTask = heaterDimmDown;\n            } else if (heaterIsDimmable === true) {\n                heaterTask = heaterDimmUp;\n            } else if (heaterIsDimmable === false) {\n                heaterTask = 0;\n            } else {\n                heaterTask = \"failure medium-low\";\n            }\n        } else if (vpdState === \"low\") {\n            exhaustTask = 0;\n            heaterTask = 0;\n        } else {\n            exhaustTask = \"failure\"; //maybe here off\n            heaterTask = \"failure\"; //maybe here off\n        }\n    }\n}\n\n// check for multi use devices\n//if (exhaustEqualsDehumidifier === true) {\n//    exhaustTask = dehumidifierTask;\n//}\n\n// check if current state is task state\nif (exhaustTask === lastExhaustState) {\n    exhaustTask = \"none\";\n}\nif (\n    heaterTask === lastHeaterState ||\n    heaterTask === lastLightState ||\n    (heaterTask >= 0 && lastLightState >= 0)\n){\n    heaterTask = \"none\";\n}\nif (ventilationTask === lastVentilationState) {\n    ventilationTask = \"none\";\n}\nif (humidifierTask === lastHumidifierState) {\n    humidifierTask = \"none\";\n}\nif (dehumidifierTask === lastDehumidifierState) {\n    dehumidifierTask = \"none\";\n}\nif (lightTask === lastLightState) {\n    lightTask = \"none\";\n}\n\n//msg creation\nmsg.payload = {\n    \"Area\": area,\n    \"ExhaustTask\": exhaustTask,\n    \"ExhaustIsDimmable\": exhaustIsDimmable,\n    \"HeaterTask\": heaterTask,\n    \"HeaterIsDimmable\": heaterIsDimmable,\n    \"VentilationTask\": ventilationTask,\n    \"VentilationIsDimmable\": ventilationIsDimmable,\n    \"HumidifierTask\": humidifierTask,\n    \"HumidifierIsDimmable\": humidifierIsDimmable,\n    \"DehumidifierTask\": dehumidifierTask,\n    \"DehumidifierIsDimmable\": dehumidifierIsDimmable,\n    \"LightTask\": lightTask,\n    \"LightIsDimmable\": lightIsDimmable,\n    \"ExhaustDimmSteps\": exhaustDimmSteps,\n    \"HeaterDimmSteps\": heaterDimmSteps,\n    \"LightDimmSteps\": lightDimmSteps,\n    \"HumidifierDimmSteps\": humidifierDimmSteps,\n    \"DehumidifierDimmSteps\": dehumidifierDimmSteps,\n    \"LightLastState\": lastLightState,\n    \"ExhaustLastState\": lastExhaustState,\n    \"HeaterLastState\": lastHeaterState,\n    \"VentilationLastState\": lastVentilationState,\n    \"HumidifierLastState\": lastHumidifierState,\n    \"DehumidifierLastState\": lastDehumidifierState,\n    \"LightPowerState\": lightPowerState,\n    \"ExhaustPowerState\": exhaustPowerState,\n    \"HeaterPowerState\": heaterPowerState,\n    \"VentilationPowerState\": ventilationPowerState,\n    \"HumidifierPowerState\": humidifierPowerState,\n    \"DehumidifierPowerState\": dehumidifierPowerState\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":220,"y":160,"wires":[["7f9f38925a92afb6","4abedff48d1ba25d"]]},{"id":"7f9f38925a92afb6","type":"subflow:954c251ffd79aa2f","z":"10a83d488a0a131c","name":"","x":510,"y":160,"wires":[]},{"id":"4abedff48d1ba25d","type":"debug","z":"10a83d488a0a131c","name":"Debug VPD Mode","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":240,"wires":[]},{"id":"b273396fda3a8a92","type":"comment","z":"10a83d488a0a131c","name":"ToDos","info":" - prio on humidity einfügen \n\n ","x":210,"y":260,"wires":[]},{"id":"ec5c725ee75a9844","type":"subflow","name":"[AC] Automatic Air Control","info":"","category":"","in":[{"x":80,"y":340,"wires":[{"id":"684e5d7333845748"}]}],"out":[],"env":[],"meta":{"module":"Automatic Air Control","author":"GanjOS Grow Automation","license":"MIT"},"color":"#DDAA99"},{"id":"95b65c050a3d120c","type":"function","z":"ec5c725ee75a9844","name":"Control Flow Switch","func":"var airControlMode = msg.payload.AirControlMode;\n\nif (airControlMode === \"VPD\") {\n    return [msg, null, null];\n} else if (airControlMode === \"Static\") {\n    return [null, msg, null];\n} else if (airControlMode === \"Temp\") {\n    return [null, null, msg];\n} else {\n    return [null, null, null];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":340,"wires":[["de277180871ae340"],["b814147560631f23"]]},{"id":"de277180871ae340","type":"subflow:10a83d488a0a131c","z":"ec5c725ee75a9844","name":"","x":880,"y":260,"wires":[]},{"id":"b814147560631f23","type":"subflow:4fa2fd5f290d5aa6","z":"ec5c725ee75a9844","name":"","x":890,"y":340,"wires":[]},{"id":"684e5d7333845748","type":"function","z":"ec5c725ee75a9844","name":"Get AirControl ToDos","func":"var area = msg.payload.Area\nvar minHum = msg.payload.MinHum\nvar minTempAir = msg.payload.MinTempAir\nvar minVpd = msg.payload.MinVpd\nvar maxHum = msg.payload.MaxHum\nvar maxTempAir = msg.payload.MaxTempAir\nvar maxVpd = msg.payload.MaxVpd\nvar targetHum = msg.payload.TargetHum\nvar targetTempAir = msg.payload.TargetTempAir\nvar targetVpd = msg.payload.TargetVpd\nvar currentHum = msg.payload.CurrentHum\nvar currentTempAir = msg.payload.CurrentTempAir\nvar currentVpd = msg.payload.CurrentVpd\nvar airControlPrio = msg.payload.AirControlPrio\nvar airControlMode = msg.payload.AirControlMode\nvar exhaustEqualsAC = msg.payload.ExhaustEqualsAC\nvar exhaustEqualsDehumidifier = msg.payload.ExhaustEqualsDehumidifier\n\nvar exhaustDimmSteps = msg.payload.ExhaustDimmSteps\nvar heaterDimmSteps = msg.payload.ExhaustDimmSteps\nvar ventilationDimmSteps = msg.payload.ExhaustDimmSteps\nvar lightDimmSteps = msg.payload.LightDimmSteps\nvar humidifierDimmSteps = msg.payload.HumidifierDimmSteps\nvar dehumidifierDimmSteps = msg.payload.DehumidifierDimmSteps\n\nvar exhaustPowerState = msg.payload.ExhaustPowerState\nvar heaterPowerState = msg.payload.ExhaustPowerState\nvar ventilationPowerState = msg.payload.ExhaustPowerState\nvar lightPowerState = msg.payload.LightPowerState\nvar humidifierPowerState = msg.payload.HumidifierPowerState\nvar dehumidifierPowerState = msg.payload.DehumidifierPowerState\n\nvar dehumidifierPowerPercentage = msg.payload.DehumidifierPowerPercentage;\nvar exhaustPowerPercentage = msg.payload.ExhaustPowerPercentage;\nvar heaterPowerPercentage = msg.payload.HeaterPowerPercentage;\nvar humidifierPowerPercentage = msg.payload.HumidifierPowerPercentage;\nvar ventilationPowerPercentage = msg.payload.VentilationPowerPercentage;\nvar lightPowerPercentage = msg.payload.LightPowerPercentage;\n\nvar dehumidifierIsDimmable = msg.payload.DehumidifierIsDimmable;\nvar exhaustIsDimmable = msg.payload.ExhaustIsDimmable;\nvar heaterIsDimmable = msg.payload.HeaterIsDimmable;\nvar humidifierIsDimmable = msg.payload.HumidifierIsDimmable;\nvar ventilationIsDimmable = msg.payload.VentilationIsDimmable;\nvar lightIsDimmable = msg.payload.LightIsDimmable;\n\nvar vpdState\nvar tempAirState\nvar humState\n\nif(currentVpd >= maxVpd){\n    vpdState = \"high\"\n} else if (currentVpd <= maxVpd && currentVpd >= targetVpd){\n    vpdState = \"medium-high\"\n} else if (currentVpd == targetVpd) {\n    vpdState = \"perfect\"\n} else if (currentVpd <= targetVpd && currentVpd >= minVpd) {\n    vpdState = \"medium-low\"\n} else if (currentVpd <= minVpd) {\n    vpdState = \"low\"\n} else {\n    vpdState = null\n}\n\nif(currentTempAir >= maxTempAir){\n    tempAirState = \"high\"\n} else if (currentTempAir <= maxTempAir && currentTempAir >= targetTempAir){\n    tempAirState = \"medium-high\"\n} else if (currentTempAir == targetTempAir) {\n    tempAirState = \"perfect\"\n} else if (currentTempAir <= targetTempAir && currentTempAir >= minTempAir) {\n    tempAirState = \"medium-low\"\n} else if (currentTempAir <= minTempAir) {\n    tempAirState = \"low\"\n} else {\n    tempAirState = null\n}\n\nif(currentHum >= maxHum){\n    humState = \"high\"\n} else if (currentHum <= maxHum && currentHum >= targetHum){\n    humState = \"medium-high\"\n} else if (currentHum == targetHum) {\n    humState = \"perfect\"\n} else if (currentHum <= targetHum && currentHum >= minHum) {\n    humState = \"medium-low\"\n} else if (currentHum <= minHum) {\n    humState = \"low\"\n} else {\n    humState = null\n}\n\nif(exhaustEqualsAC === \"on\"){\n    exhaustEqualsAC = true;\n}else{\n    exhaustEqualsAC = false;\n}\n\nif (exhaustEqualsDehumidifier === \"on\") {\n    exhaustEqualsDehumidifier = true;\n} else {\n    exhaustEqualsDehumidifier = false;\n}\n\nmsg.payload = {\n    \"Area\": area,\n    \"AirControlMode\": airControlMode,\n    \"AirControlPrio\": airControlPrio,\n    \"VpdState\": vpdState,\n    \"TempAirState\": tempAirState,\n    \"HumState\": humState,\n    \"DehumidifierPowerPercentage\": dehumidifierPowerPercentage,\n    \"ExhaustPowerPercentage\": exhaustPowerPercentage,\n    \"HeaterPowerPercentage\": heaterPowerPercentage,\n    \"HumidifierPowerPercentage\": humidifierPowerPercentage,\n    \"VentilationPowerPercentage\": ventilationPowerPercentage,\n    \"LightPowerPercentage\": lightPowerPercentage,\n    \"DehumidifierIsDimmable\": dehumidifierIsDimmable,\n    \"ExhaustIsDimmable\": exhaustIsDimmable,\n    \"HeaterIsDimmable\": heaterIsDimmable,\n    \"HumidifierIsDimmable\": humidifierIsDimmable,\n    \"VentilationIsDimmable\": ventilationIsDimmable,\n    \"LightIsDimmable\": lightIsDimmable,\n    \"ExhaustEqualsAC\": exhaustEqualsAC,\n    \"ExhaustEqualsDehumidifer\": exhaustEqualsDehumidifier,\n    \"ExhaustDimmSteps\": exhaustDimmSteps,\n    \"HeaterDimmSteps\": heaterDimmSteps,\n    \"LightDimmSteps\": lightDimmSteps,\n    \"HumidifierDimmSteps\": humidifierDimmSteps,\n    \"DehumidifierDimmSteps\": dehumidifierDimmSteps,\n    \"LightPowerState\": lightPowerState,\n    \"ExhaustPowerState\": exhaustPowerState,\n    \"HeaterPowerState\": heaterPowerState,\n    \"VentilationPowerState\": ventilationPowerState,\n    \"HumidifierPowerState\": humidifierPowerState,\n    \"DehumidifierPowerState\": dehumidifierPowerState\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":260,"y":340,"wires":[["95b65c050a3d120c"]]},{"id":"b38a3e39f2656072","type":"tab","label":"[AC] Get Data","disabled":false,"info":"","env":[]},{"id":"0242a6aec9d11152","type":"inject","z":"b38a3e39f2656072","name":"Each 15s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"15","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":130,"y":540,"wires":[["022c5e4db29d2833"]]},{"id":"7c117053c6730983","type":"subflow:ec5c725ee75a9844","z":"b38a3e39f2656072","name":"","x":2090,"y":560,"wires":[]},{"id":"0e1952105139135b","type":"api-current-state","z":"b38a3e39f2656072","name":"Area 1 General Data","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_1_data_general","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":720,"y":180,"wires":[["c09aee14df5a44d4"]]},{"id":"c09aee14df5a44d4","type":"json","z":"b38a3e39f2656072","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":990,"y":180,"wires":[["1edea3bdbc130237"]]},{"id":"b65d2854401300c9","type":"join","z":"b38a3e39f2656072","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":260,"wires":[["3bad303433c8fe7a"]]},{"id":"3bad303433c8fe7a","type":"function","z":"b38a3e39f2656072","name":"merge","func":"msg.payload = {...msg.payload.generalData, ...msg.payload.targetData, ...msg.payload.deviceData}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":260,"wires":[["7c117053c6730983"]]},{"id":"1edea3bdbc130237","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"generalData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":180,"wires":[["b65d2854401300c9"]]},{"id":"2a2077e17a3935d9","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"targetData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":240,"wires":[["b65d2854401300c9"]]},{"id":"51c9448ba5d62f4a","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"deviceData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":300,"wires":[["b65d2854401300c9"]]},{"id":"b2eda256aa1d9603","type":"subflow:b4b2531597d803dd","z":"b38a3e39f2656072","name":"","x":730,"y":300,"wires":[["51c9448ba5d62f4a"]]},{"id":"62d4beadc304b9a9","type":"subflow:7929e89f8e2ce39c","z":"b38a3e39f2656072","name":"","x":720,"y":240,"wires":[["2a2077e17a3935d9"]]},{"id":"022c5e4db29d2833","type":"function","z":"b38a3e39f2656072","name":"area switch","func":"var msgArea1 = {};\nvar msgArea2 = {};\nvar msgArea3 = {};\n\n\nmsgArea1.payload = {\n    \"Area\": \"area_1\"\n};\nmsgArea2.payload = {\n    \"Area\": \"area_2\"\n};\nmsgArea3.payload = {\n    \"Area\": \"area_3\"\n};\n\nreturn [msgArea1, null, null];\nsetTimeout(() => { return [null, msgArea2, null];}, 5000);\nsetTimeout(() => {return [null, null, msgArea3];}, 10000);\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":540,"wires":[["b2eda256aa1d9603","62d4beadc304b9a9","0e1952105139135b"],["b22195114f4c3d8c","868ca3ea2f6692b3","ae1fc7222c991efa","cc3ecfad0acb650a"],[]]},{"id":"b22195114f4c3d8c","type":"api-current-state","z":"b38a3e39f2656072","name":"Area 2 General Data","server":"#HASSIOIP#","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.area_2_data_general","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":720,"y":480,"wires":[["a16945e04f6a1af6"]]},{"id":"a16945e04f6a1af6","type":"json","z":"b38a3e39f2656072","name":"Parse Target Data JSON","property":"payload","action":"obj","pretty":false,"x":990,"y":480,"wires":[["cfc3d7b0cf3b8aee"]]},{"id":"a27c4858a8ea2b67","type":"join","z":"b38a3e39f2656072","name":"join data responses","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":560,"wires":[["131c5bf65530def0"]]},{"id":"131c5bf65530def0","type":"function","z":"b38a3e39f2656072","name":"merge","func":"msg.payload = {...msg.payload.generalData, ...msg.payload.targetData, ...msg.payload.deviceData}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":560,"wires":[["7c117053c6730983"]]},{"id":"cfc3d7b0cf3b8aee","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"generalData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":480,"wires":[["a27c4858a8ea2b67"]]},{"id":"4ce5d54698b7aac9","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"targetData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":540,"wires":[["a27c4858a8ea2b67"]]},{"id":"ec83ceb4c2baa2be","type":"change","z":"b38a3e39f2656072","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"deviceData","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1260,"y":600,"wires":[["a27c4858a8ea2b67"]]},{"id":"ae1fc7222c991efa","type":"subflow:b4b2531597d803dd","z":"b38a3e39f2656072","name":"","x":730,"y":600,"wires":[["ec83ceb4c2baa2be"]]},{"id":"868ca3ea2f6692b3","type":"subflow:7929e89f8e2ce39c","z":"b38a3e39f2656072","name":"","x":720,"y":540,"wires":[["4ce5d54698b7aac9"]]},{"id":"cc3ecfad0acb650a","type":"debug","z":"b38a3e39f2656072","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":740,"wires":[]}]